ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"digit_swapper.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.digit_swapper_init,"ax",%progbits
  18              		.align	1
  19              		.global	digit_swapper_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	digit_swapper_init:
  25              	.LFB29:
  26              		.file 1 "digit_swapper.c"
   1:digit_swapper.c **** #include "stm32f10x.h"
   2:digit_swapper.c **** #include "decoder.h"
   3:digit_swapper.c **** #include "digit_swapper.h"
   4:digit_swapper.c **** 
   5:digit_swapper.c **** #define STATIC_DIGIT_INIT(_id_) {.id = _id_, .is_dimmed = 0, .value = 0, .blink_enabled = 0}
   6:digit_swapper.c **** 
   7:digit_swapper.c **** digit_t digit_0 = STATIC_DIGIT_INIT(0);
   8:digit_swapper.c **** digit_t digit_1 = STATIC_DIGIT_INIT(1);
   9:digit_swapper.c **** digit_t digit_2 = STATIC_DIGIT_INIT(2);
  10:digit_swapper.c **** digit_t digit_3 = STATIC_DIGIT_INIT(3);
  11:digit_swapper.c **** 
  12:digit_swapper.c **** digit_t * display[] = {&digit_0, &digit_1, &digit_2, &digit_3};
  13:digit_swapper.c **** 
  14:digit_swapper.c **** // init anode swapping peripherals
  15:digit_swapper.c **** 
  16:digit_swapper.c **** void digit_swapper_init(void) {
  27              		.loc 1 16 31 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  17:digit_swapper.c ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN; 
  36              		.loc 1 17 5 view .LVU1
  37              		.loc 1 17 18 is_stmt 0 view .LVU2
  38 0002 274A     		ldr	r2, .L3
  39 0004 9369     		ldr	r3, [r2, #24]
  40 0006 43F00403 		orr	r3, r3, #4
  41 000a 9361     		str	r3, [r2, #24]
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 2


  18:digit_swapper.c ****     // PA4 - Anode 1 - PP
  19:digit_swapper.c ****     GPIOA->CRL &= ~GPIO_CRL_CNF4;
  42              		.loc 1 19 5 is_stmt 1 view .LVU3
  43              		.loc 1 19 16 is_stmt 0 view .LVU4
  44 000c 254B     		ldr	r3, .L3+4
  45 000e 1968     		ldr	r1, [r3]
  46 0010 21F44021 		bic	r1, r1, #786432
  47 0014 1960     		str	r1, [r3]
  20:digit_swapper.c ****     GPIOA->CRL |= GPIO_CRL_MODE4;
  48              		.loc 1 20 5 is_stmt 1 view .LVU5
  49              		.loc 1 20 16 is_stmt 0 view .LVU6
  50 0016 1968     		ldr	r1, [r3]
  51 0018 41F44031 		orr	r1, r1, #196608
  52 001c 1960     		str	r1, [r3]
  21:digit_swapper.c ****     // PA5 - Anode 2 - PP
  22:digit_swapper.c ****     GPIOA->CRL &= ~GPIO_CRL_CNF5;
  53              		.loc 1 22 5 is_stmt 1 view .LVU7
  54              		.loc 1 22 16 is_stmt 0 view .LVU8
  55 001e 1968     		ldr	r1, [r3]
  56 0020 21F44001 		bic	r1, r1, #12582912
  57 0024 1960     		str	r1, [r3]
  23:digit_swapper.c ****     GPIOA->CRL |= GPIO_CRL_MODE5;
  58              		.loc 1 23 5 is_stmt 1 view .LVU9
  59              		.loc 1 23 16 is_stmt 0 view .LVU10
  60 0026 1968     		ldr	r1, [r3]
  61 0028 41F44011 		orr	r1, r1, #3145728
  62 002c 1960     		str	r1, [r3]
  24:digit_swapper.c ****     // PA6 - Anode 3 - PP
  25:digit_swapper.c ****     GPIOA->CRL &= ~GPIO_CRL_CNF6;
  63              		.loc 1 25 5 is_stmt 1 view .LVU11
  64              		.loc 1 25 16 is_stmt 0 view .LVU12
  65 002e 1968     		ldr	r1, [r3]
  66 0030 21F04061 		bic	r1, r1, #201326592
  67 0034 1960     		str	r1, [r3]
  26:digit_swapper.c ****     GPIOA->CRL |= GPIO_CRL_MODE6;
  68              		.loc 1 26 5 is_stmt 1 view .LVU13
  69              		.loc 1 26 16 is_stmt 0 view .LVU14
  70 0036 1968     		ldr	r1, [r3]
  71 0038 41F04071 		orr	r1, r1, #50331648
  72 003c 1960     		str	r1, [r3]
  27:digit_swapper.c ****     // PA7 - Anode 4 - PP
  28:digit_swapper.c ****     GPIOA->CRL &= ~GPIO_CRL_CNF7;
  73              		.loc 1 28 5 is_stmt 1 view .LVU15
  74              		.loc 1 28 16 is_stmt 0 view .LVU16
  75 003e 1968     		ldr	r1, [r3]
  76 0040 21F04041 		bic	r1, r1, #-1073741824
  77 0044 1960     		str	r1, [r3]
  29:digit_swapper.c ****     GPIOA->CRL |= GPIO_CRL_MODE7;
  78              		.loc 1 29 5 is_stmt 1 view .LVU17
  79              		.loc 1 29 16 is_stmt 0 view .LVU18
  80 0046 1968     		ldr	r1, [r3]
  81 0048 41F04051 		orr	r1, r1, #805306368
  82 004c 1960     		str	r1, [r3]
  30:digit_swapper.c ****     // configure swap timer
  31:digit_swapper.c ****     RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
  83              		.loc 1 31 5 is_stmt 1 view .LVU19
  84              		.loc 1 31 18 is_stmt 0 view .LVU20
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 3


  85 004e D369     		ldr	r3, [r2, #28]
  86 0050 43F00103 		orr	r3, r3, #1
  87 0054 D361     		str	r3, [r2, #28]
  32:digit_swapper.c ****     // enable interrupts
  33:digit_swapper.c ****     TIM2->DIER |= TIM_DIER_UIE;
  88              		.loc 1 33 5 is_stmt 1 view .LVU21
  89              		.loc 1 33 16 is_stmt 0 view .LVU22
  90 0056 4FF08041 		mov	r1, #1073741824
  91 005a 8B89     		ldrh	r3, [r1, #12]
  92 005c 9BB2     		uxth	r3, r3
  93 005e 43F00103 		orr	r3, r3, #1
  94 0062 8B81     		strh	r3, [r1, #12]	@ movhi
  34:digit_swapper.c ****     NVIC_EnableIRQ(TIM2_IRQn);
  95              		.loc 1 34 5 is_stmt 1 view .LVU23
  96              	.LVL0:
  97              	.LBB6:
  98              	.LBI6:
  99              		.file 2 "CMSIS/Inc/core_cm3.h"
   1:CMSIS/Inc/core_cm3.h **** /**************************************************************************//**
   2:CMSIS/Inc/core_cm3.h ****  * @file     core_cm3.h
   3:CMSIS/Inc/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:CMSIS/Inc/core_cm3.h ****  * @version  V1.30
   5:CMSIS/Inc/core_cm3.h ****  * @date     30. October 2009
   6:CMSIS/Inc/core_cm3.h ****  *
   7:CMSIS/Inc/core_cm3.h ****  * @note
   8:CMSIS/Inc/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:CMSIS/Inc/core_cm3.h ****  *
  10:CMSIS/Inc/core_cm3.h ****  * @par
  11:CMSIS/Inc/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:CMSIS/Inc/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:CMSIS/Inc/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:CMSIS/Inc/core_cm3.h ****  *
  15:CMSIS/Inc/core_cm3.h ****  * @par
  16:CMSIS/Inc/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:CMSIS/Inc/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:CMSIS/Inc/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:CMSIS/Inc/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:CMSIS/Inc/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:CMSIS/Inc/core_cm3.h ****  *
  22:CMSIS/Inc/core_cm3.h ****  ******************************************************************************/
  23:CMSIS/Inc/core_cm3.h **** 
  24:CMSIS/Inc/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:CMSIS/Inc/core_cm3.h **** #define __CM3_CORE_H__
  26:CMSIS/Inc/core_cm3.h **** 
  27:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:CMSIS/Inc/core_cm3.h ****  *
  29:CMSIS/Inc/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:CMSIS/Inc/core_cm3.h ****  *   - Error 10: \n
  31:CMSIS/Inc/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:CMSIS/Inc/core_cm3.h ****  *     Error 10: Expecting ';'
  33:CMSIS/Inc/core_cm3.h ****  * .
  34:CMSIS/Inc/core_cm3.h ****  *   - Error 530: \n
  35:CMSIS/Inc/core_cm3.h ****  *     return(__regBasePri); \n
  36:CMSIS/Inc/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:CMSIS/Inc/core_cm3.h ****  * . 
  38:CMSIS/Inc/core_cm3.h ****  *   - Error 550: \n
  39:CMSIS/Inc/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 4


  40:CMSIS/Inc/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:CMSIS/Inc/core_cm3.h ****  * .
  42:CMSIS/Inc/core_cm3.h ****  *   - Error 754: \n
  43:CMSIS/Inc/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:CMSIS/Inc/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:CMSIS/Inc/core_cm3.h ****  * .
  46:CMSIS/Inc/core_cm3.h ****  *   - Error 750: \n
  47:CMSIS/Inc/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:CMSIS/Inc/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:CMSIS/Inc/core_cm3.h ****  * .
  50:CMSIS/Inc/core_cm3.h ****  *   - Error 528: \n
  51:CMSIS/Inc/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:CMSIS/Inc/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:CMSIS/Inc/core_cm3.h ****  * .
  54:CMSIS/Inc/core_cm3.h ****  *   - Error 751: \n
  55:CMSIS/Inc/core_cm3.h ****  *     } InterruptType_Type; \n
  56:CMSIS/Inc/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:CMSIS/Inc/core_cm3.h ****  * .
  58:CMSIS/Inc/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:CMSIS/Inc/core_cm3.h ****  *
  60:CMSIS/Inc/core_cm3.h ****  */
  61:CMSIS/Inc/core_cm3.h **** 
  62:CMSIS/Inc/core_cm3.h **** /*lint -save */
  63:CMSIS/Inc/core_cm3.h **** /*lint -e10  */
  64:CMSIS/Inc/core_cm3.h **** /*lint -e530 */
  65:CMSIS/Inc/core_cm3.h **** /*lint -e550 */
  66:CMSIS/Inc/core_cm3.h **** /*lint -e754 */
  67:CMSIS/Inc/core_cm3.h **** /*lint -e750 */
  68:CMSIS/Inc/core_cm3.h **** /*lint -e528 */
  69:CMSIS/Inc/core_cm3.h **** /*lint -e751 */
  70:CMSIS/Inc/core_cm3.h **** 
  71:CMSIS/Inc/core_cm3.h **** 
  72:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:CMSIS/Inc/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:CMSIS/Inc/core_cm3.h ****     - CMSIS version number
  75:CMSIS/Inc/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:CMSIS/Inc/core_cm3.h ****     - Cortex-M core peripheral base address
  77:CMSIS/Inc/core_cm3.h ****   @{
  78:CMSIS/Inc/core_cm3.h ****  */
  79:CMSIS/Inc/core_cm3.h **** 
  80:CMSIS/Inc/core_cm3.h **** #ifdef __cplusplus
  81:CMSIS/Inc/core_cm3.h ****  extern "C" {
  82:CMSIS/Inc/core_cm3.h **** #endif 
  83:CMSIS/Inc/core_cm3.h **** 
  84:CMSIS/Inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:CMSIS/Inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:CMSIS/Inc/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:CMSIS/Inc/core_cm3.h **** 
  88:CMSIS/Inc/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:CMSIS/Inc/core_cm3.h **** 
  90:CMSIS/Inc/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:CMSIS/Inc/core_cm3.h **** 
  92:CMSIS/Inc/core_cm3.h **** #if defined (__ICCARM__)
  93:CMSIS/Inc/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:CMSIS/Inc/core_cm3.h **** #endif
  95:CMSIS/Inc/core_cm3.h **** 
  96:CMSIS/Inc/core_cm3.h **** 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 5


  97:CMSIS/Inc/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:CMSIS/Inc/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:CMSIS/Inc/core_cm3.h **** #endif
 100:CMSIS/Inc/core_cm3.h **** 
 101:CMSIS/Inc/core_cm3.h **** 
 102:CMSIS/Inc/core_cm3.h **** 
 103:CMSIS/Inc/core_cm3.h **** 
 104:CMSIS/Inc/core_cm3.h **** /**
 105:CMSIS/Inc/core_cm3.h ****  * IO definitions
 106:CMSIS/Inc/core_cm3.h ****  *
 107:CMSIS/Inc/core_cm3.h ****  * define access restrictions to peripheral registers
 108:CMSIS/Inc/core_cm3.h ****  */
 109:CMSIS/Inc/core_cm3.h **** 
 110:CMSIS/Inc/core_cm3.h **** #ifdef __cplusplus
 111:CMSIS/Inc/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:CMSIS/Inc/core_cm3.h **** #else
 113:CMSIS/Inc/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:CMSIS/Inc/core_cm3.h **** #endif
 115:CMSIS/Inc/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:CMSIS/Inc/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:CMSIS/Inc/core_cm3.h **** 
 118:CMSIS/Inc/core_cm3.h **** 
 119:CMSIS/Inc/core_cm3.h **** 
 120:CMSIS/Inc/core_cm3.h **** /*******************************************************************************
 121:CMSIS/Inc/core_cm3.h ****  *                 Register Abstraction
 122:CMSIS/Inc/core_cm3.h ****  ******************************************************************************/
 123:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:CMSIS/Inc/core_cm3.h ****  @{
 125:CMSIS/Inc/core_cm3.h **** */
 126:CMSIS/Inc/core_cm3.h **** 
 127:CMSIS/Inc/core_cm3.h **** 
 128:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:CMSIS/Inc/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:CMSIS/Inc/core_cm3.h ****   @{
 131:CMSIS/Inc/core_cm3.h ****  */
 132:CMSIS/Inc/core_cm3.h **** typedef struct
 133:CMSIS/Inc/core_cm3.h **** {
 134:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:CMSIS/Inc/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:CMSIS/Inc/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:CMSIS/Inc/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:CMSIS/Inc/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:CMSIS/Inc/core_cm3.h **** }  NVIC_Type;                                               
 148:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:CMSIS/Inc/core_cm3.h **** 
 150:CMSIS/Inc/core_cm3.h **** 
 151:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:CMSIS/Inc/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:CMSIS/Inc/core_cm3.h ****   @{
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 6


 154:CMSIS/Inc/core_cm3.h ****  */
 155:CMSIS/Inc/core_cm3.h **** typedef struct
 156:CMSIS/Inc/core_cm3.h **** {
 157:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:CMSIS/Inc/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:CMSIS/Inc/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:CMSIS/Inc/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:CMSIS/Inc/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:CMSIS/Inc/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:CMSIS/Inc/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:CMSIS/Inc/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:CMSIS/Inc/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:CMSIS/Inc/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:CMSIS/Inc/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:CMSIS/Inc/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:CMSIS/Inc/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:CMSIS/Inc/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:CMSIS/Inc/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:CMSIS/Inc/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:CMSIS/Inc/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:CMSIS/Inc/core_cm3.h **** } SCB_Type;                                                
 177:CMSIS/Inc/core_cm3.h **** 
 178:CMSIS/Inc/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:CMSIS/Inc/core_cm3.h **** 
 182:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:CMSIS/Inc/core_cm3.h **** 
 185:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:CMSIS/Inc/core_cm3.h **** 
 188:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:CMSIS/Inc/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:CMSIS/Inc/core_cm3.h **** 
 191:CMSIS/Inc/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:CMSIS/Inc/core_cm3.h **** 
 195:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:CMSIS/Inc/core_cm3.h **** 
 198:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:CMSIS/Inc/core_cm3.h **** 
 201:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:CMSIS/Inc/core_cm3.h **** 
 204:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:CMSIS/Inc/core_cm3.h **** 
 207:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:CMSIS/Inc/core_cm3.h **** 
 210:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 7


 211:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:CMSIS/Inc/core_cm3.h **** 
 213:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:CMSIS/Inc/core_cm3.h **** 
 216:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:CMSIS/Inc/core_cm3.h **** 
 219:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:CMSIS/Inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:CMSIS/Inc/core_cm3.h **** 
 222:CMSIS/Inc/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:CMSIS/Inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:CMSIS/Inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:CMSIS/Inc/core_cm3.h **** 
 226:CMSIS/Inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:CMSIS/Inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:CMSIS/Inc/core_cm3.h **** 
 229:CMSIS/Inc/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:CMSIS/Inc/core_cm3.h **** 
 233:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:CMSIS/Inc/core_cm3.h **** 
 236:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:CMSIS/Inc/core_cm3.h **** 
 239:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:CMSIS/Inc/core_cm3.h **** 
 242:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:CMSIS/Inc/core_cm3.h **** 
 245:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:CMSIS/Inc/core_cm3.h **** 
 248:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:CMSIS/Inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:CMSIS/Inc/core_cm3.h **** 
 251:CMSIS/Inc/core_cm3.h **** /* SCB System Control Register Definitions */
 252:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:CMSIS/Inc/core_cm3.h **** 
 255:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:CMSIS/Inc/core_cm3.h **** 
 258:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:CMSIS/Inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:CMSIS/Inc/core_cm3.h **** 
 261:CMSIS/Inc/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:CMSIS/Inc/core_cm3.h **** 
 265:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:CMSIS/Inc/core_cm3.h **** 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 8


 268:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:CMSIS/Inc/core_cm3.h **** 
 271:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:CMSIS/Inc/core_cm3.h **** 
 274:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:CMSIS/Inc/core_cm3.h **** 
 277:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:CMSIS/Inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:CMSIS/Inc/core_cm3.h **** 
 280:CMSIS/Inc/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:CMSIS/Inc/core_cm3.h **** 
 284:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:CMSIS/Inc/core_cm3.h **** 
 287:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:CMSIS/Inc/core_cm3.h **** 
 290:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:CMSIS/Inc/core_cm3.h **** 
 293:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:CMSIS/Inc/core_cm3.h **** 
 296:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:CMSIS/Inc/core_cm3.h **** 
 299:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:CMSIS/Inc/core_cm3.h **** 
 302:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:CMSIS/Inc/core_cm3.h **** 
 305:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:CMSIS/Inc/core_cm3.h **** 
 308:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:CMSIS/Inc/core_cm3.h **** 
 311:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:CMSIS/Inc/core_cm3.h ****                                      
 314:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:CMSIS/Inc/core_cm3.h **** 
 317:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:CMSIS/Inc/core_cm3.h **** 
 320:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:CMSIS/Inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:CMSIS/Inc/core_cm3.h **** 
 323:CMSIS/Inc/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 9


 325:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:CMSIS/Inc/core_cm3.h **** 
 327:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:CMSIS/Inc/core_cm3.h **** 
 330:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:CMSIS/Inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:CMSIS/Inc/core_cm3.h **** 
 333:CMSIS/Inc/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:CMSIS/Inc/core_cm3.h **** 
 337:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:CMSIS/Inc/core_cm3.h **** 
 340:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:CMSIS/Inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:CMSIS/Inc/core_cm3.h **** 
 343:CMSIS/Inc/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:CMSIS/Inc/core_cm3.h **** 
 347:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:CMSIS/Inc/core_cm3.h **** 
 350:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:CMSIS/Inc/core_cm3.h **** 
 353:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:CMSIS/Inc/core_cm3.h **** 
 356:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:CMSIS/Inc/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:CMSIS/Inc/core_cm3.h **** 
 360:CMSIS/Inc/core_cm3.h **** 
 361:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:CMSIS/Inc/core_cm3.h ****   memory mapped structure for SysTick
 363:CMSIS/Inc/core_cm3.h ****   @{
 364:CMSIS/Inc/core_cm3.h ****  */
 365:CMSIS/Inc/core_cm3.h **** typedef struct
 366:CMSIS/Inc/core_cm3.h **** {
 367:CMSIS/Inc/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:CMSIS/Inc/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:CMSIS/Inc/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:CMSIS/Inc/core_cm3.h **** } SysTick_Type;
 372:CMSIS/Inc/core_cm3.h **** 
 373:CMSIS/Inc/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:CMSIS/Inc/core_cm3.h **** 
 377:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:CMSIS/Inc/core_cm3.h **** 
 380:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 10


 382:CMSIS/Inc/core_cm3.h **** 
 383:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:CMSIS/Inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:CMSIS/Inc/core_cm3.h **** 
 386:CMSIS/Inc/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:CMSIS/Inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:CMSIS/Inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:CMSIS/Inc/core_cm3.h **** 
 390:CMSIS/Inc/core_cm3.h **** /* SysTick Current Register Definitions */
 391:CMSIS/Inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:CMSIS/Inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:CMSIS/Inc/core_cm3.h **** 
 394:CMSIS/Inc/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:CMSIS/Inc/core_cm3.h **** 
 398:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:CMSIS/Inc/core_cm3.h **** 
 401:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:CMSIS/Inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:CMSIS/Inc/core_cm3.h **** 
 405:CMSIS/Inc/core_cm3.h **** 
 406:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:CMSIS/Inc/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:CMSIS/Inc/core_cm3.h ****   @{
 409:CMSIS/Inc/core_cm3.h ****  */
 410:CMSIS/Inc/core_cm3.h **** typedef struct
 411:CMSIS/Inc/core_cm3.h **** {
 412:CMSIS/Inc/core_cm3.h ****   __O  union  
 413:CMSIS/Inc/core_cm3.h ****   {
 414:CMSIS/Inc/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:CMSIS/Inc/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:CMSIS/Inc/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:CMSIS/Inc/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:CMSIS/Inc/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:CMSIS/Inc/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:CMSIS/Inc/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:CMSIS/Inc/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:CMSIS/Inc/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:CMSIS/Inc/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:CMSIS/Inc/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:CMSIS/Inc/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 11


 439:CMSIS/Inc/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:CMSIS/Inc/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:CMSIS/Inc/core_cm3.h **** } ITM_Type;                                                
 445:CMSIS/Inc/core_cm3.h **** 
 446:CMSIS/Inc/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:CMSIS/Inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:CMSIS/Inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:CMSIS/Inc/core_cm3.h **** 
 450:CMSIS/Inc/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:CMSIS/Inc/core_cm3.h **** 
 454:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:CMSIS/Inc/core_cm3.h **** 
 457:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:CMSIS/Inc/core_cm3.h **** 
 460:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:CMSIS/Inc/core_cm3.h **** 
 463:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:CMSIS/Inc/core_cm3.h **** 
 466:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:CMSIS/Inc/core_cm3.h **** 
 469:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:CMSIS/Inc/core_cm3.h **** 
 472:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:CMSIS/Inc/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:CMSIS/Inc/core_cm3.h **** 
 475:CMSIS/Inc/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:CMSIS/Inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:CMSIS/Inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:CMSIS/Inc/core_cm3.h **** 
 479:CMSIS/Inc/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:CMSIS/Inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:CMSIS/Inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:CMSIS/Inc/core_cm3.h **** 
 483:CMSIS/Inc/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:CMSIS/Inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:CMSIS/Inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:CMSIS/Inc/core_cm3.h **** 
 487:CMSIS/Inc/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:CMSIS/Inc/core_cm3.h **** 
 491:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:CMSIS/Inc/core_cm3.h **** 
 494:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:CMSIS/Inc/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 12


 496:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:CMSIS/Inc/core_cm3.h **** 
 498:CMSIS/Inc/core_cm3.h **** 
 499:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:CMSIS/Inc/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:CMSIS/Inc/core_cm3.h ****   @{
 502:CMSIS/Inc/core_cm3.h ****  */
 503:CMSIS/Inc/core_cm3.h **** typedef struct
 504:CMSIS/Inc/core_cm3.h **** {
 505:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED0;
 506:CMSIS/Inc/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:CMSIS/Inc/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:CMSIS/Inc/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:CMSIS/Inc/core_cm3.h **** #else
 510:CMSIS/Inc/core_cm3.h ****        uint32_t RESERVED1;
 511:CMSIS/Inc/core_cm3.h **** #endif
 512:CMSIS/Inc/core_cm3.h **** } InterruptType_Type;
 513:CMSIS/Inc/core_cm3.h **** 
 514:CMSIS/Inc/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:CMSIS/Inc/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:CMSIS/Inc/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:CMSIS/Inc/core_cm3.h **** 
 518:CMSIS/Inc/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:CMSIS/Inc/core_cm3.h **** 
 522:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:CMSIS/Inc/core_cm3.h **** 
 525:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:CMSIS/Inc/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:CMSIS/Inc/core_cm3.h **** 
 529:CMSIS/Inc/core_cm3.h **** 
 530:CMSIS/Inc/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:CMSIS/Inc/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:CMSIS/Inc/core_cm3.h ****   @{
 534:CMSIS/Inc/core_cm3.h ****  */
 535:CMSIS/Inc/core_cm3.h **** typedef struct
 536:CMSIS/Inc/core_cm3.h **** {
 537:CMSIS/Inc/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:CMSIS/Inc/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:CMSIS/Inc/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:CMSIS/Inc/core_cm3.h **** } MPU_Type;                                                
 549:CMSIS/Inc/core_cm3.h **** 
 550:CMSIS/Inc/core_cm3.h **** /* MPU Type Register */
 551:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 13


 553:CMSIS/Inc/core_cm3.h **** 
 554:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:CMSIS/Inc/core_cm3.h **** 
 557:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:CMSIS/Inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:CMSIS/Inc/core_cm3.h **** 
 560:CMSIS/Inc/core_cm3.h **** /* MPU Control Register */
 561:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:CMSIS/Inc/core_cm3.h **** 
 564:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:CMSIS/Inc/core_cm3.h **** 
 567:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:CMSIS/Inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:CMSIS/Inc/core_cm3.h **** 
 570:CMSIS/Inc/core_cm3.h **** /* MPU Region Number Register */
 571:CMSIS/Inc/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:CMSIS/Inc/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:CMSIS/Inc/core_cm3.h **** 
 574:CMSIS/Inc/core_cm3.h **** /* MPU Region Base Address Register */
 575:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:CMSIS/Inc/core_cm3.h **** 
 578:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:CMSIS/Inc/core_cm3.h **** 
 581:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:CMSIS/Inc/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:CMSIS/Inc/core_cm3.h **** 
 584:CMSIS/Inc/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:CMSIS/Inc/core_cm3.h **** 
 588:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:CMSIS/Inc/core_cm3.h **** 
 591:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:CMSIS/Inc/core_cm3.h **** 
 594:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:CMSIS/Inc/core_cm3.h **** 
 597:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:CMSIS/Inc/core_cm3.h **** 
 600:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:CMSIS/Inc/core_cm3.h **** 
 603:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:CMSIS/Inc/core_cm3.h **** 
 606:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:CMSIS/Inc/core_cm3.h **** 
 609:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 14


 610:CMSIS/Inc/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:CMSIS/Inc/core_cm3.h **** 
 612:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:CMSIS/Inc/core_cm3.h **** #endif
 614:CMSIS/Inc/core_cm3.h **** 
 615:CMSIS/Inc/core_cm3.h **** 
 616:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:CMSIS/Inc/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:CMSIS/Inc/core_cm3.h ****   @{
 619:CMSIS/Inc/core_cm3.h ****  */
 620:CMSIS/Inc/core_cm3.h **** typedef struct
 621:CMSIS/Inc/core_cm3.h **** {
 622:CMSIS/Inc/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:CMSIS/Inc/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:CMSIS/Inc/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:CMSIS/Inc/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:CMSIS/Inc/core_cm3.h **** } CoreDebug_Type;
 627:CMSIS/Inc/core_cm3.h **** 
 628:CMSIS/Inc/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:CMSIS/Inc/core_cm3.h **** 
 632:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:CMSIS/Inc/core_cm3.h **** 
 635:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:CMSIS/Inc/core_cm3.h **** 
 638:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:CMSIS/Inc/core_cm3.h **** 
 641:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:CMSIS/Inc/core_cm3.h **** 
 644:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:CMSIS/Inc/core_cm3.h **** 
 647:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:CMSIS/Inc/core_cm3.h **** 
 650:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:CMSIS/Inc/core_cm3.h **** 
 653:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:CMSIS/Inc/core_cm3.h **** 
 656:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:CMSIS/Inc/core_cm3.h **** 
 659:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:CMSIS/Inc/core_cm3.h **** 
 662:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:CMSIS/Inc/core_cm3.h **** 
 665:CMSIS/Inc/core_cm3.h **** /* Debug Core Register Selector Register */
 666:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 15


 667:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:CMSIS/Inc/core_cm3.h **** 
 669:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:CMSIS/Inc/core_cm3.h **** 
 672:CMSIS/Inc/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:CMSIS/Inc/core_cm3.h **** 
 676:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:CMSIS/Inc/core_cm3.h **** 
 679:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:CMSIS/Inc/core_cm3.h **** 
 682:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:CMSIS/Inc/core_cm3.h **** 
 685:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:CMSIS/Inc/core_cm3.h **** 
 688:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:CMSIS/Inc/core_cm3.h **** 
 691:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:CMSIS/Inc/core_cm3.h **** 
 694:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:CMSIS/Inc/core_cm3.h **** 
 697:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:CMSIS/Inc/core_cm3.h **** 
 700:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:CMSIS/Inc/core_cm3.h **** 
 703:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:CMSIS/Inc/core_cm3.h **** 
 706:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:CMSIS/Inc/core_cm3.h **** 
 709:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:CMSIS/Inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:CMSIS/Inc/core_cm3.h **** 
 713:CMSIS/Inc/core_cm3.h **** 
 714:CMSIS/Inc/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:CMSIS/Inc/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:CMSIS/Inc/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:CMSIS/Inc/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:CMSIS/Inc/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:CMSIS/Inc/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:CMSIS/Inc/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:CMSIS/Inc/core_cm3.h **** 
 722:CMSIS/Inc/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:CMSIS/Inc/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 16


 724:CMSIS/Inc/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:CMSIS/Inc/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:CMSIS/Inc/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:CMSIS/Inc/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:CMSIS/Inc/core_cm3.h **** 
 729:CMSIS/Inc/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:CMSIS/Inc/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:CMSIS/Inc/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:CMSIS/Inc/core_cm3.h **** #endif
 733:CMSIS/Inc/core_cm3.h **** 
 734:CMSIS/Inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:CMSIS/Inc/core_cm3.h **** 
 736:CMSIS/Inc/core_cm3.h **** 
 737:CMSIS/Inc/core_cm3.h **** /*******************************************************************************
 738:CMSIS/Inc/core_cm3.h ****  *                Hardware Abstraction Layer
 739:CMSIS/Inc/core_cm3.h ****  ******************************************************************************/
 740:CMSIS/Inc/core_cm3.h **** 
 741:CMSIS/Inc/core_cm3.h **** #if defined ( __CC_ARM   )
 742:CMSIS/Inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:CMSIS/Inc/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:CMSIS/Inc/core_cm3.h **** 
 745:CMSIS/Inc/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:CMSIS/Inc/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:CMSIS/Inc/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:CMSIS/Inc/core_cm3.h **** 
 749:CMSIS/Inc/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:CMSIS/Inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:CMSIS/Inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:CMSIS/Inc/core_cm3.h **** 
 753:CMSIS/Inc/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:CMSIS/Inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:CMSIS/Inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:CMSIS/Inc/core_cm3.h **** 
 757:CMSIS/Inc/core_cm3.h **** #endif
 758:CMSIS/Inc/core_cm3.h **** 
 759:CMSIS/Inc/core_cm3.h **** 
 760:CMSIS/Inc/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:CMSIS/Inc/core_cm3.h **** 
 762:CMSIS/Inc/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:CMSIS/Inc/core_cm3.h **** /* ARM armcc specific functions */
 764:CMSIS/Inc/core_cm3.h **** 
 765:CMSIS/Inc/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:CMSIS/Inc/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:CMSIS/Inc/core_cm3.h **** 
 768:CMSIS/Inc/core_cm3.h **** #define __NOP                             __nop
 769:CMSIS/Inc/core_cm3.h **** #define __WFI                             __wfi
 770:CMSIS/Inc/core_cm3.h **** #define __WFE                             __wfe
 771:CMSIS/Inc/core_cm3.h **** #define __SEV                             __sev
 772:CMSIS/Inc/core_cm3.h **** #define __ISB()                           __isb(0)
 773:CMSIS/Inc/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:CMSIS/Inc/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:CMSIS/Inc/core_cm3.h **** #define __REV                             __rev
 776:CMSIS/Inc/core_cm3.h **** #define __RBIT                            __rbit
 777:CMSIS/Inc/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:CMSIS/Inc/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:CMSIS/Inc/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:CMSIS/Inc/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 17


 781:CMSIS/Inc/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:CMSIS/Inc/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:CMSIS/Inc/core_cm3.h **** 
 784:CMSIS/Inc/core_cm3.h **** 
 785:CMSIS/Inc/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:CMSIS/Inc/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:CMSIS/Inc/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:CMSIS/Inc/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:CMSIS/Inc/core_cm3.h **** 
 790:CMSIS/Inc/core_cm3.h **** 
 791:CMSIS/Inc/core_cm3.h **** /**
 792:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:CMSIS/Inc/core_cm3.h ****  *
 794:CMSIS/Inc/core_cm3.h ****  * @return ProcessStackPointer
 795:CMSIS/Inc/core_cm3.h ****  *
 796:CMSIS/Inc/core_cm3.h ****  * Return the actual process stack pointer
 797:CMSIS/Inc/core_cm3.h ****  */
 798:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:CMSIS/Inc/core_cm3.h **** 
 800:CMSIS/Inc/core_cm3.h **** /**
 801:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:CMSIS/Inc/core_cm3.h ****  *
 803:CMSIS/Inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:CMSIS/Inc/core_cm3.h ****  *
 805:CMSIS/Inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:CMSIS/Inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:CMSIS/Inc/core_cm3.h ****  */
 808:CMSIS/Inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:CMSIS/Inc/core_cm3.h **** 
 810:CMSIS/Inc/core_cm3.h **** /**
 811:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:CMSIS/Inc/core_cm3.h ****  *
 813:CMSIS/Inc/core_cm3.h ****  * @return Main Stack Pointer
 814:CMSIS/Inc/core_cm3.h ****  *
 815:CMSIS/Inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:CMSIS/Inc/core_cm3.h ****  * Cortex processor register
 817:CMSIS/Inc/core_cm3.h ****  */
 818:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:CMSIS/Inc/core_cm3.h **** 
 820:CMSIS/Inc/core_cm3.h **** /**
 821:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:CMSIS/Inc/core_cm3.h ****  *
 823:CMSIS/Inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:CMSIS/Inc/core_cm3.h ****  *
 825:CMSIS/Inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:CMSIS/Inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:CMSIS/Inc/core_cm3.h ****  */
 828:CMSIS/Inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:CMSIS/Inc/core_cm3.h **** 
 830:CMSIS/Inc/core_cm3.h **** /**
 831:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:CMSIS/Inc/core_cm3.h ****  *
 833:CMSIS/Inc/core_cm3.h ****  * @param   value  value to reverse
 834:CMSIS/Inc/core_cm3.h ****  * @return         reversed value
 835:CMSIS/Inc/core_cm3.h ****  *
 836:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:CMSIS/Inc/core_cm3.h ****  */
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 18


 838:CMSIS/Inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:CMSIS/Inc/core_cm3.h **** 
 840:CMSIS/Inc/core_cm3.h **** /**
 841:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:CMSIS/Inc/core_cm3.h ****  *
 843:CMSIS/Inc/core_cm3.h ****  * @param   value  value to reverse
 844:CMSIS/Inc/core_cm3.h ****  * @return         reversed value
 845:CMSIS/Inc/core_cm3.h ****  *
 846:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:CMSIS/Inc/core_cm3.h ****  */
 848:CMSIS/Inc/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:CMSIS/Inc/core_cm3.h **** 
 850:CMSIS/Inc/core_cm3.h **** 
 851:CMSIS/Inc/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:CMSIS/Inc/core_cm3.h **** 
 853:CMSIS/Inc/core_cm3.h **** /**
 854:CMSIS/Inc/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:CMSIS/Inc/core_cm3.h ****  *
 856:CMSIS/Inc/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:CMSIS/Inc/core_cm3.h ****  */
 858:CMSIS/Inc/core_cm3.h **** extern void __CLREX(void);
 859:CMSIS/Inc/core_cm3.h **** 
 860:CMSIS/Inc/core_cm3.h **** /**
 861:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Base Priority value
 862:CMSIS/Inc/core_cm3.h ****  *
 863:CMSIS/Inc/core_cm3.h ****  * @return BasePriority
 864:CMSIS/Inc/core_cm3.h ****  *
 865:CMSIS/Inc/core_cm3.h ****  * Return the content of the base priority register
 866:CMSIS/Inc/core_cm3.h ****  */
 867:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:CMSIS/Inc/core_cm3.h **** 
 869:CMSIS/Inc/core_cm3.h **** /**
 870:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Base Priority value
 871:CMSIS/Inc/core_cm3.h ****  *
 872:CMSIS/Inc/core_cm3.h ****  * @param  basePri  BasePriority
 873:CMSIS/Inc/core_cm3.h ****  *
 874:CMSIS/Inc/core_cm3.h ****  * Set the base priority register
 875:CMSIS/Inc/core_cm3.h ****  */
 876:CMSIS/Inc/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:CMSIS/Inc/core_cm3.h **** 
 878:CMSIS/Inc/core_cm3.h **** /**
 879:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:CMSIS/Inc/core_cm3.h ****  *
 881:CMSIS/Inc/core_cm3.h ****  * @return PriMask
 882:CMSIS/Inc/core_cm3.h ****  *
 883:CMSIS/Inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:CMSIS/Inc/core_cm3.h ****  */
 885:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:CMSIS/Inc/core_cm3.h **** 
 887:CMSIS/Inc/core_cm3.h **** /**
 888:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:CMSIS/Inc/core_cm3.h ****  *
 890:CMSIS/Inc/core_cm3.h ****  * @param   priMask  PriMask
 891:CMSIS/Inc/core_cm3.h ****  *
 892:CMSIS/Inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:CMSIS/Inc/core_cm3.h ****  */
 894:CMSIS/Inc/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 19


 895:CMSIS/Inc/core_cm3.h **** 
 896:CMSIS/Inc/core_cm3.h **** /**
 897:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:CMSIS/Inc/core_cm3.h ****  *
 899:CMSIS/Inc/core_cm3.h ****  * @return FaultMask
 900:CMSIS/Inc/core_cm3.h ****  *
 901:CMSIS/Inc/core_cm3.h ****  * Return the content of the fault mask register
 902:CMSIS/Inc/core_cm3.h ****  */
 903:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:CMSIS/Inc/core_cm3.h **** 
 905:CMSIS/Inc/core_cm3.h **** /**
 906:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:CMSIS/Inc/core_cm3.h ****  *
 908:CMSIS/Inc/core_cm3.h ****  * @param  faultMask faultMask value
 909:CMSIS/Inc/core_cm3.h ****  *
 910:CMSIS/Inc/core_cm3.h ****  * Set the fault mask register
 911:CMSIS/Inc/core_cm3.h ****  */
 912:CMSIS/Inc/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:CMSIS/Inc/core_cm3.h **** 
 914:CMSIS/Inc/core_cm3.h **** /**
 915:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Control Register value
 916:CMSIS/Inc/core_cm3.h ****  * 
 917:CMSIS/Inc/core_cm3.h ****  * @return Control value
 918:CMSIS/Inc/core_cm3.h ****  *
 919:CMSIS/Inc/core_cm3.h ****  * Return the content of the control register
 920:CMSIS/Inc/core_cm3.h ****  */
 921:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:CMSIS/Inc/core_cm3.h **** 
 923:CMSIS/Inc/core_cm3.h **** /**
 924:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Control Register value
 925:CMSIS/Inc/core_cm3.h ****  *
 926:CMSIS/Inc/core_cm3.h ****  * @param  control  Control value
 927:CMSIS/Inc/core_cm3.h ****  *
 928:CMSIS/Inc/core_cm3.h ****  * Set the control register
 929:CMSIS/Inc/core_cm3.h ****  */
 930:CMSIS/Inc/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:CMSIS/Inc/core_cm3.h **** 
 932:CMSIS/Inc/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:CMSIS/Inc/core_cm3.h **** 
 934:CMSIS/Inc/core_cm3.h **** /**
 935:CMSIS/Inc/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:CMSIS/Inc/core_cm3.h ****  *
 937:CMSIS/Inc/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:CMSIS/Inc/core_cm3.h ****  */
 939:CMSIS/Inc/core_cm3.h **** #define __CLREX                           __clrex
 940:CMSIS/Inc/core_cm3.h **** 
 941:CMSIS/Inc/core_cm3.h **** /**
 942:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Base Priority value
 943:CMSIS/Inc/core_cm3.h ****  *
 944:CMSIS/Inc/core_cm3.h ****  * @return BasePriority
 945:CMSIS/Inc/core_cm3.h ****  *
 946:CMSIS/Inc/core_cm3.h ****  * Return the content of the base priority register
 947:CMSIS/Inc/core_cm3.h ****  */
 948:CMSIS/Inc/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:CMSIS/Inc/core_cm3.h **** {
 950:CMSIS/Inc/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:CMSIS/Inc/core_cm3.h ****   return(__regBasePri);
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 20


 952:CMSIS/Inc/core_cm3.h **** }
 953:CMSIS/Inc/core_cm3.h **** 
 954:CMSIS/Inc/core_cm3.h **** /**
 955:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Base Priority value
 956:CMSIS/Inc/core_cm3.h ****  *
 957:CMSIS/Inc/core_cm3.h ****  * @param  basePri  BasePriority
 958:CMSIS/Inc/core_cm3.h ****  *
 959:CMSIS/Inc/core_cm3.h ****  * Set the base priority register
 960:CMSIS/Inc/core_cm3.h ****  */
 961:CMSIS/Inc/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:CMSIS/Inc/core_cm3.h **** {
 963:CMSIS/Inc/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:CMSIS/Inc/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:CMSIS/Inc/core_cm3.h **** }
 966:CMSIS/Inc/core_cm3.h **** 
 967:CMSIS/Inc/core_cm3.h **** /**
 968:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:CMSIS/Inc/core_cm3.h ****  *
 970:CMSIS/Inc/core_cm3.h ****  * @return PriMask
 971:CMSIS/Inc/core_cm3.h ****  *
 972:CMSIS/Inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:CMSIS/Inc/core_cm3.h ****  */
 974:CMSIS/Inc/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:CMSIS/Inc/core_cm3.h **** {
 976:CMSIS/Inc/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:CMSIS/Inc/core_cm3.h ****   return(__regPriMask);
 978:CMSIS/Inc/core_cm3.h **** }
 979:CMSIS/Inc/core_cm3.h **** 
 980:CMSIS/Inc/core_cm3.h **** /**
 981:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:CMSIS/Inc/core_cm3.h ****  *
 983:CMSIS/Inc/core_cm3.h ****  * @param  priMask  PriMask
 984:CMSIS/Inc/core_cm3.h ****  *
 985:CMSIS/Inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:CMSIS/Inc/core_cm3.h ****  */
 987:CMSIS/Inc/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:CMSIS/Inc/core_cm3.h **** {
 989:CMSIS/Inc/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:CMSIS/Inc/core_cm3.h ****   __regPriMask = (priMask);
 991:CMSIS/Inc/core_cm3.h **** }
 992:CMSIS/Inc/core_cm3.h **** 
 993:CMSIS/Inc/core_cm3.h **** /**
 994:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:CMSIS/Inc/core_cm3.h ****  *
 996:CMSIS/Inc/core_cm3.h ****  * @return FaultMask
 997:CMSIS/Inc/core_cm3.h ****  *
 998:CMSIS/Inc/core_cm3.h ****  * Return the content of the fault mask register
 999:CMSIS/Inc/core_cm3.h ****  */
1000:CMSIS/Inc/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:CMSIS/Inc/core_cm3.h **** {
1002:CMSIS/Inc/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:CMSIS/Inc/core_cm3.h ****   return(__regFaultMask);
1004:CMSIS/Inc/core_cm3.h **** }
1005:CMSIS/Inc/core_cm3.h **** 
1006:CMSIS/Inc/core_cm3.h **** /**
1007:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:CMSIS/Inc/core_cm3.h ****  *
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 21


1009:CMSIS/Inc/core_cm3.h ****  * @param  faultMask  faultMask value
1010:CMSIS/Inc/core_cm3.h ****  *
1011:CMSIS/Inc/core_cm3.h ****  * Set the fault mask register
1012:CMSIS/Inc/core_cm3.h ****  */
1013:CMSIS/Inc/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:CMSIS/Inc/core_cm3.h **** {
1015:CMSIS/Inc/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:CMSIS/Inc/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:CMSIS/Inc/core_cm3.h **** }
1018:CMSIS/Inc/core_cm3.h **** 
1019:CMSIS/Inc/core_cm3.h **** /**
1020:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Control Register value
1021:CMSIS/Inc/core_cm3.h ****  * 
1022:CMSIS/Inc/core_cm3.h ****  * @return Control value
1023:CMSIS/Inc/core_cm3.h ****  *
1024:CMSIS/Inc/core_cm3.h ****  * Return the content of the control register
1025:CMSIS/Inc/core_cm3.h ****  */
1026:CMSIS/Inc/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:CMSIS/Inc/core_cm3.h **** {
1028:CMSIS/Inc/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:CMSIS/Inc/core_cm3.h ****   return(__regControl);
1030:CMSIS/Inc/core_cm3.h **** }
1031:CMSIS/Inc/core_cm3.h **** 
1032:CMSIS/Inc/core_cm3.h **** /**
1033:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Control Register value
1034:CMSIS/Inc/core_cm3.h ****  *
1035:CMSIS/Inc/core_cm3.h ****  * @param  control  Control value
1036:CMSIS/Inc/core_cm3.h ****  *
1037:CMSIS/Inc/core_cm3.h ****  * Set the control register
1038:CMSIS/Inc/core_cm3.h ****  */
1039:CMSIS/Inc/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:CMSIS/Inc/core_cm3.h **** {
1041:CMSIS/Inc/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:CMSIS/Inc/core_cm3.h ****   __regControl = control;
1043:CMSIS/Inc/core_cm3.h **** }
1044:CMSIS/Inc/core_cm3.h **** 
1045:CMSIS/Inc/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:CMSIS/Inc/core_cm3.h **** 
1047:CMSIS/Inc/core_cm3.h **** 
1048:CMSIS/Inc/core_cm3.h **** 
1049:CMSIS/Inc/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:CMSIS/Inc/core_cm3.h **** /* IAR iccarm specific functions */
1051:CMSIS/Inc/core_cm3.h **** 
1052:CMSIS/Inc/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:CMSIS/Inc/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:CMSIS/Inc/core_cm3.h **** 
1055:CMSIS/Inc/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:CMSIS/Inc/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:CMSIS/Inc/core_cm3.h **** 
1058:CMSIS/Inc/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:CMSIS/Inc/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:CMSIS/Inc/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:CMSIS/Inc/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:CMSIS/Inc/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:CMSIS/Inc/core_cm3.h **** 
1064:CMSIS/Inc/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:CMSIS/Inc/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 22


1066:CMSIS/Inc/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:CMSIS/Inc/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:CMSIS/Inc/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:CMSIS/Inc/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:CMSIS/Inc/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:CMSIS/Inc/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:CMSIS/Inc/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:CMSIS/Inc/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:CMSIS/Inc/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:CMSIS/Inc/core_cm3.h **** 
1076:CMSIS/Inc/core_cm3.h **** 
1077:CMSIS/Inc/core_cm3.h **** /**
1078:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:CMSIS/Inc/core_cm3.h ****  *
1080:CMSIS/Inc/core_cm3.h ****  * @return ProcessStackPointer
1081:CMSIS/Inc/core_cm3.h ****  *
1082:CMSIS/Inc/core_cm3.h ****  * Return the actual process stack pointer
1083:CMSIS/Inc/core_cm3.h ****  */
1084:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:CMSIS/Inc/core_cm3.h **** 
1086:CMSIS/Inc/core_cm3.h **** /**
1087:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:CMSIS/Inc/core_cm3.h ****  *
1089:CMSIS/Inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:CMSIS/Inc/core_cm3.h ****  *
1091:CMSIS/Inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:CMSIS/Inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:CMSIS/Inc/core_cm3.h ****  */
1094:CMSIS/Inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:CMSIS/Inc/core_cm3.h **** 
1096:CMSIS/Inc/core_cm3.h **** /**
1097:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:CMSIS/Inc/core_cm3.h ****  *
1099:CMSIS/Inc/core_cm3.h ****  * @return Main Stack Pointer
1100:CMSIS/Inc/core_cm3.h ****  *
1101:CMSIS/Inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:CMSIS/Inc/core_cm3.h ****  * Cortex processor register
1103:CMSIS/Inc/core_cm3.h ****  */
1104:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:CMSIS/Inc/core_cm3.h **** 
1106:CMSIS/Inc/core_cm3.h **** /**
1107:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:CMSIS/Inc/core_cm3.h ****  *
1109:CMSIS/Inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:CMSIS/Inc/core_cm3.h ****  *
1111:CMSIS/Inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:CMSIS/Inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:CMSIS/Inc/core_cm3.h ****  */
1114:CMSIS/Inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:CMSIS/Inc/core_cm3.h **** 
1116:CMSIS/Inc/core_cm3.h **** /**
1117:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:CMSIS/Inc/core_cm3.h ****  *
1119:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1120:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1121:CMSIS/Inc/core_cm3.h ****  *
1122:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in unsigned short value
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 23


1123:CMSIS/Inc/core_cm3.h ****  */
1124:CMSIS/Inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:CMSIS/Inc/core_cm3.h **** 
1126:CMSIS/Inc/core_cm3.h **** /**
1127:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse bit order of value
1128:CMSIS/Inc/core_cm3.h ****  *
1129:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1130:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1131:CMSIS/Inc/core_cm3.h ****  *
1132:CMSIS/Inc/core_cm3.h ****  * Reverse bit order of value
1133:CMSIS/Inc/core_cm3.h ****  */
1134:CMSIS/Inc/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:CMSIS/Inc/core_cm3.h **** 
1136:CMSIS/Inc/core_cm3.h **** /**
1137:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:CMSIS/Inc/core_cm3.h ****  *
1139:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1140:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1141:CMSIS/Inc/core_cm3.h ****  *
1142:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:CMSIS/Inc/core_cm3.h ****  */
1144:CMSIS/Inc/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:CMSIS/Inc/core_cm3.h **** 
1146:CMSIS/Inc/core_cm3.h **** /**
1147:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:CMSIS/Inc/core_cm3.h ****  *
1149:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1150:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1151:CMSIS/Inc/core_cm3.h ****  *
1152:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:CMSIS/Inc/core_cm3.h ****  */
1154:CMSIS/Inc/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:CMSIS/Inc/core_cm3.h **** 
1156:CMSIS/Inc/core_cm3.h **** /**
1157:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:CMSIS/Inc/core_cm3.h ****  *
1159:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1160:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1161:CMSIS/Inc/core_cm3.h ****  *
1162:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:CMSIS/Inc/core_cm3.h ****  */
1164:CMSIS/Inc/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:CMSIS/Inc/core_cm3.h **** 
1166:CMSIS/Inc/core_cm3.h **** /**
1167:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:CMSIS/Inc/core_cm3.h ****  *
1169:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1170:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1171:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1172:CMSIS/Inc/core_cm3.h ****  *
1173:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:CMSIS/Inc/core_cm3.h ****  */
1175:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:CMSIS/Inc/core_cm3.h **** 
1177:CMSIS/Inc/core_cm3.h **** /**
1178:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:CMSIS/Inc/core_cm3.h ****  *
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 24


1180:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1181:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1182:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1183:CMSIS/Inc/core_cm3.h ****  *
1184:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:CMSIS/Inc/core_cm3.h ****  */
1186:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:CMSIS/Inc/core_cm3.h **** 
1188:CMSIS/Inc/core_cm3.h **** /**
1189:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:CMSIS/Inc/core_cm3.h ****  *
1191:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1192:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1193:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1194:CMSIS/Inc/core_cm3.h ****  *
1195:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:CMSIS/Inc/core_cm3.h ****  */
1197:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:CMSIS/Inc/core_cm3.h **** 
1199:CMSIS/Inc/core_cm3.h **** 
1200:CMSIS/Inc/core_cm3.h **** 
1201:CMSIS/Inc/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:CMSIS/Inc/core_cm3.h **** /* GNU gcc specific functions */
1203:CMSIS/Inc/core_cm3.h **** 
1204:CMSIS/Inc/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:CMSIS/Inc/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:CMSIS/Inc/core_cm3.h **** 
1207:CMSIS/Inc/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:CMSIS/Inc/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:CMSIS/Inc/core_cm3.h **** 
1210:CMSIS/Inc/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:CMSIS/Inc/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:CMSIS/Inc/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:CMSIS/Inc/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:CMSIS/Inc/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:CMSIS/Inc/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:CMSIS/Inc/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:CMSIS/Inc/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:CMSIS/Inc/core_cm3.h **** 
1219:CMSIS/Inc/core_cm3.h **** 
1220:CMSIS/Inc/core_cm3.h **** /**
1221:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:CMSIS/Inc/core_cm3.h ****  *
1223:CMSIS/Inc/core_cm3.h ****  * @return ProcessStackPointer
1224:CMSIS/Inc/core_cm3.h ****  *
1225:CMSIS/Inc/core_cm3.h ****  * Return the actual process stack pointer
1226:CMSIS/Inc/core_cm3.h ****  */
1227:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:CMSIS/Inc/core_cm3.h **** 
1229:CMSIS/Inc/core_cm3.h **** /**
1230:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:CMSIS/Inc/core_cm3.h ****  *
1232:CMSIS/Inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:CMSIS/Inc/core_cm3.h ****  *
1234:CMSIS/Inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:CMSIS/Inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:CMSIS/Inc/core_cm3.h ****  */
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 25


1237:CMSIS/Inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:CMSIS/Inc/core_cm3.h **** 
1239:CMSIS/Inc/core_cm3.h **** /**
1240:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:CMSIS/Inc/core_cm3.h ****  *
1242:CMSIS/Inc/core_cm3.h ****  * @return Main Stack Pointer
1243:CMSIS/Inc/core_cm3.h ****  *
1244:CMSIS/Inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:CMSIS/Inc/core_cm3.h ****  * Cortex processor register
1246:CMSIS/Inc/core_cm3.h ****  */
1247:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:CMSIS/Inc/core_cm3.h **** 
1249:CMSIS/Inc/core_cm3.h **** /**
1250:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:CMSIS/Inc/core_cm3.h ****  *
1252:CMSIS/Inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:CMSIS/Inc/core_cm3.h ****  *
1254:CMSIS/Inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:CMSIS/Inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:CMSIS/Inc/core_cm3.h ****  */
1257:CMSIS/Inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:CMSIS/Inc/core_cm3.h **** 
1259:CMSIS/Inc/core_cm3.h **** /**
1260:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Base Priority value
1261:CMSIS/Inc/core_cm3.h ****  *
1262:CMSIS/Inc/core_cm3.h ****  * @return BasePriority
1263:CMSIS/Inc/core_cm3.h ****  *
1264:CMSIS/Inc/core_cm3.h ****  * Return the content of the base priority register
1265:CMSIS/Inc/core_cm3.h ****  */
1266:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:CMSIS/Inc/core_cm3.h **** 
1268:CMSIS/Inc/core_cm3.h **** /**
1269:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Base Priority value
1270:CMSIS/Inc/core_cm3.h ****  *
1271:CMSIS/Inc/core_cm3.h ****  * @param  basePri  BasePriority
1272:CMSIS/Inc/core_cm3.h ****  *
1273:CMSIS/Inc/core_cm3.h ****  * Set the base priority register
1274:CMSIS/Inc/core_cm3.h ****  */
1275:CMSIS/Inc/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:CMSIS/Inc/core_cm3.h **** 
1277:CMSIS/Inc/core_cm3.h **** /**
1278:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:CMSIS/Inc/core_cm3.h ****  *
1280:CMSIS/Inc/core_cm3.h ****  * @return PriMask
1281:CMSIS/Inc/core_cm3.h ****  *
1282:CMSIS/Inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:CMSIS/Inc/core_cm3.h ****  */
1284:CMSIS/Inc/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:CMSIS/Inc/core_cm3.h **** 
1286:CMSIS/Inc/core_cm3.h **** /**
1287:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:CMSIS/Inc/core_cm3.h ****  *
1289:CMSIS/Inc/core_cm3.h ****  * @param  priMask  PriMask
1290:CMSIS/Inc/core_cm3.h ****  *
1291:CMSIS/Inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:CMSIS/Inc/core_cm3.h ****  */
1293:CMSIS/Inc/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 26


1294:CMSIS/Inc/core_cm3.h **** 
1295:CMSIS/Inc/core_cm3.h **** /**
1296:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:CMSIS/Inc/core_cm3.h ****  *
1298:CMSIS/Inc/core_cm3.h ****  * @return FaultMask
1299:CMSIS/Inc/core_cm3.h ****  *
1300:CMSIS/Inc/core_cm3.h ****  * Return the content of the fault mask register
1301:CMSIS/Inc/core_cm3.h ****  */
1302:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:CMSIS/Inc/core_cm3.h **** 
1304:CMSIS/Inc/core_cm3.h **** /**
1305:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:CMSIS/Inc/core_cm3.h ****  *
1307:CMSIS/Inc/core_cm3.h ****  * @param  faultMask  faultMask value
1308:CMSIS/Inc/core_cm3.h ****  *
1309:CMSIS/Inc/core_cm3.h ****  * Set the fault mask register
1310:CMSIS/Inc/core_cm3.h ****  */
1311:CMSIS/Inc/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:CMSIS/Inc/core_cm3.h **** 
1313:CMSIS/Inc/core_cm3.h **** /**
1314:CMSIS/Inc/core_cm3.h ****  * @brief  Return the Control Register value
1315:CMSIS/Inc/core_cm3.h **** * 
1316:CMSIS/Inc/core_cm3.h **** *  @return Control value
1317:CMSIS/Inc/core_cm3.h ****  *
1318:CMSIS/Inc/core_cm3.h ****  * Return the content of the control register
1319:CMSIS/Inc/core_cm3.h ****  */
1320:CMSIS/Inc/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:CMSIS/Inc/core_cm3.h **** 
1322:CMSIS/Inc/core_cm3.h **** /**
1323:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Control Register value
1324:CMSIS/Inc/core_cm3.h ****  *
1325:CMSIS/Inc/core_cm3.h ****  * @param  control  Control value
1326:CMSIS/Inc/core_cm3.h ****  *
1327:CMSIS/Inc/core_cm3.h ****  * Set the control register
1328:CMSIS/Inc/core_cm3.h ****  */
1329:CMSIS/Inc/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:CMSIS/Inc/core_cm3.h **** 
1331:CMSIS/Inc/core_cm3.h **** /**
1332:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:CMSIS/Inc/core_cm3.h ****  *
1334:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1335:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1336:CMSIS/Inc/core_cm3.h ****  *
1337:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in integer value
1338:CMSIS/Inc/core_cm3.h ****  */
1339:CMSIS/Inc/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:CMSIS/Inc/core_cm3.h **** 
1341:CMSIS/Inc/core_cm3.h **** /**
1342:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:CMSIS/Inc/core_cm3.h ****  *
1344:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1345:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1346:CMSIS/Inc/core_cm3.h ****  *
1347:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:CMSIS/Inc/core_cm3.h ****  */
1349:CMSIS/Inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:CMSIS/Inc/core_cm3.h **** 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 27


1351:CMSIS/Inc/core_cm3.h **** /**
1352:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:CMSIS/Inc/core_cm3.h ****  *
1354:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1355:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1356:CMSIS/Inc/core_cm3.h ****  *
1357:CMSIS/Inc/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:CMSIS/Inc/core_cm3.h ****  */
1359:CMSIS/Inc/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:CMSIS/Inc/core_cm3.h **** 
1361:CMSIS/Inc/core_cm3.h **** /**
1362:CMSIS/Inc/core_cm3.h ****  * @brief  Reverse bit order of value
1363:CMSIS/Inc/core_cm3.h ****  *
1364:CMSIS/Inc/core_cm3.h ****  * @param  value  value to reverse
1365:CMSIS/Inc/core_cm3.h ****  * @return        reversed value
1366:CMSIS/Inc/core_cm3.h ****  *
1367:CMSIS/Inc/core_cm3.h ****  * Reverse bit order of value
1368:CMSIS/Inc/core_cm3.h ****  */
1369:CMSIS/Inc/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:CMSIS/Inc/core_cm3.h **** 
1371:CMSIS/Inc/core_cm3.h **** /**
1372:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:CMSIS/Inc/core_cm3.h ****  *
1374:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1375:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1376:CMSIS/Inc/core_cm3.h ****  *
1377:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:CMSIS/Inc/core_cm3.h ****  */
1379:CMSIS/Inc/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:CMSIS/Inc/core_cm3.h **** 
1381:CMSIS/Inc/core_cm3.h **** /**
1382:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:CMSIS/Inc/core_cm3.h ****  *
1384:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1385:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1386:CMSIS/Inc/core_cm3.h ****  *
1387:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:CMSIS/Inc/core_cm3.h ****  */
1389:CMSIS/Inc/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:CMSIS/Inc/core_cm3.h **** 
1391:CMSIS/Inc/core_cm3.h **** /**
1392:CMSIS/Inc/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:CMSIS/Inc/core_cm3.h ****  *
1394:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1395:CMSIS/Inc/core_cm3.h ****  * @return        value of (*address)
1396:CMSIS/Inc/core_cm3.h ****  *
1397:CMSIS/Inc/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:CMSIS/Inc/core_cm3.h ****  */
1399:CMSIS/Inc/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:CMSIS/Inc/core_cm3.h **** 
1401:CMSIS/Inc/core_cm3.h **** /**
1402:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:CMSIS/Inc/core_cm3.h ****  *
1404:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1405:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1406:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1407:CMSIS/Inc/core_cm3.h ****  *
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 28


1408:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:CMSIS/Inc/core_cm3.h ****  */
1410:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:CMSIS/Inc/core_cm3.h **** 
1412:CMSIS/Inc/core_cm3.h **** /**
1413:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:CMSIS/Inc/core_cm3.h ****  *
1415:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1416:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1417:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1418:CMSIS/Inc/core_cm3.h ****  *
1419:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:CMSIS/Inc/core_cm3.h ****  */
1421:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:CMSIS/Inc/core_cm3.h **** 
1423:CMSIS/Inc/core_cm3.h **** /**
1424:CMSIS/Inc/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:CMSIS/Inc/core_cm3.h ****  *
1426:CMSIS/Inc/core_cm3.h ****  * @param  value  value to store
1427:CMSIS/Inc/core_cm3.h ****  * @param  *addr  address pointer
1428:CMSIS/Inc/core_cm3.h ****  * @return        successful / failed
1429:CMSIS/Inc/core_cm3.h ****  *
1430:CMSIS/Inc/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:CMSIS/Inc/core_cm3.h ****  */
1432:CMSIS/Inc/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:CMSIS/Inc/core_cm3.h **** 
1434:CMSIS/Inc/core_cm3.h **** 
1435:CMSIS/Inc/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:CMSIS/Inc/core_cm3.h **** /* TASKING carm specific functions */
1437:CMSIS/Inc/core_cm3.h **** 
1438:CMSIS/Inc/core_cm3.h **** /*
1439:CMSIS/Inc/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:CMSIS/Inc/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:CMSIS/Inc/core_cm3.h ****  * Including the CMSIS ones.
1442:CMSIS/Inc/core_cm3.h ****  */
1443:CMSIS/Inc/core_cm3.h **** 
1444:CMSIS/Inc/core_cm3.h **** #endif
1445:CMSIS/Inc/core_cm3.h **** 
1446:CMSIS/Inc/core_cm3.h **** 
1447:CMSIS/Inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:CMSIS/Inc/core_cm3.h ****   Core  Function Interface containing:
1449:CMSIS/Inc/core_cm3.h ****   - Core NVIC Functions
1450:CMSIS/Inc/core_cm3.h ****   - Core SysTick Functions
1451:CMSIS/Inc/core_cm3.h ****   - Core Reset Functions
1452:CMSIS/Inc/core_cm3.h **** */
1453:CMSIS/Inc/core_cm3.h **** /*@{*/
1454:CMSIS/Inc/core_cm3.h **** 
1455:CMSIS/Inc/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:CMSIS/Inc/core_cm3.h **** 
1457:CMSIS/Inc/core_cm3.h **** /**
1458:CMSIS/Inc/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:CMSIS/Inc/core_cm3.h ****  *
1460:CMSIS/Inc/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:CMSIS/Inc/core_cm3.h ****  *
1462:CMSIS/Inc/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:CMSIS/Inc/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:CMSIS/Inc/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 29


1465:CMSIS/Inc/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:CMSIS/Inc/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:CMSIS/Inc/core_cm3.h ****  */
1468:CMSIS/Inc/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:CMSIS/Inc/core_cm3.h **** {
1470:CMSIS/Inc/core_cm3.h ****   uint32_t reg_value;
1471:CMSIS/Inc/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:CMSIS/Inc/core_cm3.h ****   
1473:CMSIS/Inc/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:CMSIS/Inc/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:CMSIS/Inc/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:CMSIS/Inc/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:CMSIS/Inc/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:CMSIS/Inc/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:CMSIS/Inc/core_cm3.h **** }
1480:CMSIS/Inc/core_cm3.h **** 
1481:CMSIS/Inc/core_cm3.h **** /**
1482:CMSIS/Inc/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:CMSIS/Inc/core_cm3.h ****  *
1484:CMSIS/Inc/core_cm3.h ****  * @return priority grouping field 
1485:CMSIS/Inc/core_cm3.h ****  *
1486:CMSIS/Inc/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:CMSIS/Inc/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:CMSIS/Inc/core_cm3.h ****  */
1489:CMSIS/Inc/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:CMSIS/Inc/core_cm3.h **** {
1491:CMSIS/Inc/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:CMSIS/Inc/core_cm3.h **** }
1493:CMSIS/Inc/core_cm3.h **** 
1494:CMSIS/Inc/core_cm3.h **** /**
1495:CMSIS/Inc/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:CMSIS/Inc/core_cm3.h ****  *
1497:CMSIS/Inc/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:CMSIS/Inc/core_cm3.h ****  *
1499:CMSIS/Inc/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:CMSIS/Inc/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:CMSIS/Inc/core_cm3.h ****  */
1502:CMSIS/Inc/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 100              		.loc 2 1502 22 view .LVU24
 101              	.LBB7:
1503:CMSIS/Inc/core_cm3.h **** {
1504:CMSIS/Inc/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 102              		.loc 2 1504 3 view .LVU25
 103              		.loc 2 1504 39 is_stmt 0 view .LVU26
 104 0064 1048     		ldr	r0, .L3+8
 105 0066 4FF08053 		mov	r3, #268435456
 106 006a 0360     		str	r3, [r0]
 107              	.LVL1:
 108              		.loc 2 1504 39 view .LVU27
 109              	.LBE7:
 110              	.LBE6:
  35:digit_swapper.c ****     // configure blink timer
  36:digit_swapper.c ****     RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 111              		.loc 1 36 5 is_stmt 1 view .LVU28
 112              		.loc 1 36 18 is_stmt 0 view .LVU29
 113 006c D369     		ldr	r3, [r2, #28]
 114 006e 43F00403 		orr	r3, r3, #4
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 30


 115 0072 D361     		str	r3, [r2, #28]
  37:digit_swapper.c ****     // enable interrupts
  38:digit_swapper.c ****     TIM4->DIER |= TIM_DIER_UIE;
 116              		.loc 1 38 5 is_stmt 1 view .LVU30
 117              		.loc 1 38 16 is_stmt 0 view .LVU31
 118 0074 0D4B     		ldr	r3, .L3+12
 119 0076 9A89     		ldrh	r2, [r3, #12]
 120 0078 92B2     		uxth	r2, r2
 121 007a 42F00102 		orr	r2, r2, #1
 122 007e 9A81     		strh	r2, [r3, #12]	@ movhi
  39:digit_swapper.c ****     // set blink timer freq to 2Hz (2 times a second)
  40:digit_swapper.c ****     TIM4->PSC = 7200-1;
 123              		.loc 1 40 5 is_stmt 1 view .LVU32
 124              		.loc 1 40 15 is_stmt 0 view .LVU33
 125 0080 41F61F42 		movw	r2, #7199
 126 0084 1A85     		strh	r2, [r3, #40]	@ movhi
  41:digit_swapper.c ****     TIM4->ARR = 5000;
 127              		.loc 1 41 5 is_stmt 1 view .LVU34
 128              		.loc 1 41 15 is_stmt 0 view .LVU35
 129 0086 41F28832 		movw	r2, #5000
 130 008a 9A85     		strh	r2, [r3, #44]	@ movhi
  42:digit_swapper.c ****     TIM4->CR1 |= TIM_CR1_CEN;
 131              		.loc 1 42 5 is_stmt 1 view .LVU36
 132              		.loc 1 42 15 is_stmt 0 view .LVU37
 133 008c 1A88     		ldrh	r2, [r3]
 134 008e 92B2     		uxth	r2, r2
 135 0090 42F00102 		orr	r2, r2, #1
 136 0094 1A80     		strh	r2, [r3]	@ movhi
  43:digit_swapper.c ****     NVIC_EnableIRQ(TIM4_IRQn);
 137              		.loc 1 43 5 is_stmt 1 view .LVU38
 138              	.LVL2:
 139              	.LBB8:
 140              	.LBI8:
1502:CMSIS/Inc/core_cm3.h **** {
 141              		.loc 2 1502 22 view .LVU39
 142              	.LBB9:
 143              		.loc 2 1504 3 view .LVU40
 144              		.loc 2 1504 39 is_stmt 0 view .LVU41
 145 0096 0160     		str	r1, [r0]
 146              	.LVL3:
 147              		.loc 2 1504 39 view .LVU42
 148              	.LBE9:
 149              	.LBE8:
  44:digit_swapper.c ****     
  45:digit_swapper.c **** 	decoder_init();
 150              		.loc 1 45 2 is_stmt 1 view .LVU43
 151 0098 FFF7FEFF 		bl	decoder_init
 152              	.LVL4:
  46:digit_swapper.c **** }
 153              		.loc 1 46 1 is_stmt 0 view .LVU44
 154 009c 08BD     		pop	{r3, pc}
 155              	.L4:
 156 009e 00BF     		.align	2
 157              	.L3:
 158 00a0 00100240 		.word	1073876992
 159 00a4 00080140 		.word	1073809408
 160 00a8 00E100E0 		.word	-536813312
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 31


 161 00ac 00080040 		.word	1073743872
 162              		.cfi_endproc
 163              	.LFE29:
 165              		.section	.text.digit_swapper_start,"ax",%progbits
 166              		.align	1
 167              		.global	digit_swapper_start
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	digit_swapper_start:
 173              	.LFB30:
  47:digit_swapper.c **** 
  48:digit_swapper.c **** // enable anode swapping
  49:digit_swapper.c **** 
  50:digit_swapper.c **** void digit_swapper_start(void) {
 174              		.loc 1 50 32 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
  51:digit_swapper.c ****     // anode swap timer freq is 400 Hz
  52:digit_swapper.c ****     // (in reality every tube blinkks at
  53:digit_swapper.c ****     // 50Hz (400 / 4 digits / half time enabled))
  54:digit_swapper.c ****     TIM2->PSC = 7200-1;
 179              		.loc 1 54 5 view .LVU46
 180              		.loc 1 54 15 is_stmt 0 view .LVU47
 181 0000 4FF08042 		mov	r2, #1073741824
 182 0004 41F61F43 		movw	r3, #7199
 183 0008 1385     		strh	r3, [r2, #40]	@ movhi
  55:digit_swapper.c ****     TIM2->ARR = 25;
 184              		.loc 1 55 5 is_stmt 1 view .LVU48
 185              		.loc 1 55 15 is_stmt 0 view .LVU49
 186 000a 1923     		movs	r3, #25
 187 000c 9385     		strh	r3, [r2, #44]	@ movhi
  56:digit_swapper.c ****     TIM2->CR1 |= TIM_CR1_CEN;
 188              		.loc 1 56 5 is_stmt 1 view .LVU50
 189              		.loc 1 56 15 is_stmt 0 view .LVU51
 190 000e 1388     		ldrh	r3, [r2]
 191 0010 9BB2     		uxth	r3, r3
 192 0012 43F00103 		orr	r3, r3, #1
 193 0016 1380     		strh	r3, [r2]	@ movhi
  57:digit_swapper.c **** }
 194              		.loc 1 57 1 view .LVU52
 195 0018 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE30:
 199              		.section	.text.digit_swapper_stop,"ax",%progbits
 200              		.align	1
 201              		.global	digit_swapper_stop
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	digit_swapper_stop:
 207              	.LFB31:
  58:digit_swapper.c **** 
  59:digit_swapper.c **** // disable anode swapping
  60:digit_swapper.c **** 
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 32


  61:digit_swapper.c **** void digit_swapper_stop(void) {
 208              		.loc 1 61 31 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
  62:digit_swapper.c ****     TIM2->CR1 &= ~TIM_CR1_CEN;
 213              		.loc 1 62 5 view .LVU54
 214              		.loc 1 62 15 is_stmt 0 view .LVU55
 215 0000 4FF08042 		mov	r2, #1073741824
 216 0004 1388     		ldrh	r3, [r2]
 217 0006 9BB2     		uxth	r3, r3
 218 0008 23F00103 		bic	r3, r3, #1
 219 000c 9BB2     		uxth	r3, r3
 220 000e 1380     		strh	r3, [r2]	@ movhi
  63:digit_swapper.c **** }
 221              		.loc 1 63 1 view .LVU56
 222 0010 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE31:
 226              		.section	.text.digit_swapper_set_time,"ax",%progbits
 227              		.align	1
 228              		.global	digit_swapper_set_time
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	digit_swapper_set_time:
 234              	.LVL5:
 235              	.LFB32:
  64:digit_swapper.c **** 
  65:digit_swapper.c **** // set time to be displayed
  66:digit_swapper.c **** 
  67:digit_swapper.c **** void digit_swapper_set_time(time_t *t) {
 236              		.loc 1 67 40 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		.loc 1 67 40 is_stmt 0 view .LVU58
 241 0000 00B5     		push	{lr}
 242              	.LCFI1:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 14, -4
  68:digit_swapper.c ****     display[0]->value = t->hours/10;
 245              		.loc 1 68 5 is_stmt 1 view .LVU59
 246              		.loc 1 68 26 is_stmt 0 view .LVU60
 247 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 248              		.loc 1 68 12 view .LVU61
 249 0004 1449     		ldr	r1, .L9
 250              		.loc 1 68 23 view .LVU62
 251 0006 154B     		ldr	r3, .L9+4
 252 0008 A3FB02C2 		umull	ip, r2, r3, r2
 253 000c D208     		lsrs	r2, r2, #3
 254 000e D1F800C0 		ldr	ip, [r1]
 255 0012 8CF80120 		strb	r2, [ip, #1]
  69:digit_swapper.c ****     display[1]->value = t->hours%10;
 256              		.loc 1 69 5 is_stmt 1 view .LVU63
 257              		.loc 1 69 26 is_stmt 0 view .LVU64
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 33


 258 0016 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 259              		.loc 1 69 23 view .LVU65
 260 001a A3FB0CE2 		umull	lr, r2, r3, ip
 261 001e D208     		lsrs	r2, r2, #3
 262 0020 02EB8202 		add	r2, r2, r2, lsl #2
 263 0024 ACEB4202 		sub	r2, ip, r2, lsl #1
 264 0028 D1F804C0 		ldr	ip, [r1, #4]
 265 002c 8CF80120 		strb	r2, [ip, #1]
  70:digit_swapper.c ****     display[2]->value = t->minutes/10;
 266              		.loc 1 70 5 is_stmt 1 view .LVU66
 267              		.loc 1 70 26 is_stmt 0 view .LVU67
 268 0030 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 269              		.loc 1 70 23 view .LVU68
 270 0032 A3FB02C2 		umull	ip, r2, r3, r2
 271 0036 D208     		lsrs	r2, r2, #3
 272 0038 D1F808C0 		ldr	ip, [r1, #8]
 273 003c 8CF80120 		strb	r2, [ip, #1]
  71:digit_swapper.c ****     display[3]->value = t->minutes%10;
 274              		.loc 1 71 5 is_stmt 1 view .LVU69
 275              		.loc 1 71 26 is_stmt 0 view .LVU70
 276 0040 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 277              		.loc 1 71 12 view .LVU71
 278 0042 C968     		ldr	r1, [r1, #12]
 279              		.loc 1 71 23 view .LVU72
 280 0044 A3FB0203 		umull	r0, r3, r3, r2
 281              	.LVL6:
 282              		.loc 1 71 23 view .LVU73
 283 0048 DB08     		lsrs	r3, r3, #3
 284 004a 03EB8303 		add	r3, r3, r3, lsl #2
 285 004e A2EB4303 		sub	r3, r2, r3, lsl #1
 286 0052 4B70     		strb	r3, [r1, #1]
  72:digit_swapper.c **** }
 287              		.loc 1 72 1 view .LVU74
 288 0054 5DF804FB 		ldr	pc, [sp], #4
 289              	.L10:
 290              		.align	2
 291              	.L9:
 292 0058 00000000 		.word	.LANCHOR0
 293 005c CDCCCCCC 		.word	-858993459
 294              		.cfi_endproc
 295              	.LFE32:
 297              		.section	.text.digit_swapper_enable_blink,"ax",%progbits
 298              		.align	1
 299              		.global	digit_swapper_enable_blink
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 304              	digit_swapper_enable_blink:
 305              	.LVL7:
 306              	.LFB33:
  73:digit_swapper.c **** 
  74:digit_swapper.c **** // enable blink for tube by id
  75:digit_swapper.c **** 
  76:digit_swapper.c **** void digit_swapper_enable_blink(uint8_t digit_id) {
 307              		.loc 1 76 51 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 34


 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
  77:digit_swapper.c ****     for(uint8_t i=0; i<4; i++) {
 312              		.loc 1 77 5 view .LVU76
 313              	.LBB10:
 314              		.loc 1 77 9 view .LVU77
 315              		.loc 1 77 17 is_stmt 0 view .LVU78
 316 0000 0023     		movs	r3, #0
 317              		.loc 1 77 5 view .LVU79
 318 0002 01E0     		b	.L12
 319              	.LVL8:
 320              	.L13:
 321              		.loc 1 77 27 is_stmt 1 discriminator 2 view .LVU80
 322              		.loc 1 77 28 is_stmt 0 discriminator 2 view .LVU81
 323 0004 0133     		adds	r3, r3, #1
 324              	.LVL9:
 325              		.loc 1 77 28 discriminator 2 view .LVU82
 326 0006 DBB2     		uxtb	r3, r3
 327              	.LVL10:
 328              	.L12:
 329              		.loc 1 77 22 is_stmt 1 discriminator 1 view .LVU83
 330              		.loc 1 77 5 is_stmt 0 discriminator 1 view .LVU84
 331 0008 032B     		cmp	r3, #3
 332 000a 08D8     		bhi	.L15
  78:digit_swapper.c ****         if(digit_id == display[i]->id) display[i]->blink_enabled = 1;
 333              		.loc 1 78 9 is_stmt 1 view .LVU85
 334              		.loc 1 78 31 is_stmt 0 view .LVU86
 335 000c 044A     		ldr	r2, .L16
 336 000e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 337              		.loc 1 78 34 view .LVU87
 338 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 339              		.loc 1 78 11 view .LVU88
 340 0014 8142     		cmp	r1, r0
 341 0016 F5D1     		bne	.L13
 342              		.loc 1 78 40 is_stmt 1 discriminator 1 view .LVU89
 343              		.loc 1 78 66 is_stmt 0 discriminator 1 view .LVU90
 344 0018 0121     		movs	r1, #1
 345 001a 9170     		strb	r1, [r2, #2]
 346 001c F2E7     		b	.L13
 347              	.L15:
 348              	.LBE10:
  79:digit_swapper.c ****     }
  80:digit_swapper.c **** }
 349              		.loc 1 80 1 view .LVU91
 350 001e 7047     		bx	lr
 351              	.L17:
 352              		.align	2
 353              	.L16:
 354 0020 00000000 		.word	.LANCHOR0
 355              		.cfi_endproc
 356              	.LFE33:
 358              		.section	.text.digit_swapper_disable_blink,"ax",%progbits
 359              		.align	1
 360              		.global	digit_swapper_disable_blink
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 35


 365              	digit_swapper_disable_blink:
 366              	.LVL11:
 367              	.LFB34:
  81:digit_swapper.c **** 
  82:digit_swapper.c **** // disable blink for tube by id
  83:digit_swapper.c **** 
  84:digit_swapper.c **** void digit_swapper_disable_blink(uint8_t digit_id) {
 368              		.loc 1 84 52 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
  85:digit_swapper.c ****     for(uint8_t i=0; i<4; i++) {
 373              		.loc 1 85 5 view .LVU93
 374              	.LBB11:
 375              		.loc 1 85 9 view .LVU94
 376              		.loc 1 85 17 is_stmt 0 view .LVU95
 377 0000 0023     		movs	r3, #0
 378              		.loc 1 85 5 view .LVU96
 379 0002 01E0     		b	.L19
 380              	.LVL12:
 381              	.L20:
 382              		.loc 1 85 27 is_stmt 1 discriminator 2 view .LVU97
 383              		.loc 1 85 28 is_stmt 0 discriminator 2 view .LVU98
 384 0004 0133     		adds	r3, r3, #1
 385              	.LVL13:
 386              		.loc 1 85 28 discriminator 2 view .LVU99
 387 0006 DBB2     		uxtb	r3, r3
 388              	.LVL14:
 389              	.L19:
 390              		.loc 1 85 22 is_stmt 1 discriminator 1 view .LVU100
 391              		.loc 1 85 5 is_stmt 0 discriminator 1 view .LVU101
 392 0008 032B     		cmp	r3, #3
 393 000a 0CD8     		bhi	.L22
  86:digit_swapper.c ****         if(digit_id == display[i]->id) {
 394              		.loc 1 86 9 is_stmt 1 view .LVU102
 395              		.loc 1 86 31 is_stmt 0 view .LVU103
 396 000c 064A     		ldr	r2, .L23
 397 000e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 398              		.loc 1 86 34 view .LVU104
 399 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 400              		.loc 1 86 11 view .LVU105
 401 0014 8142     		cmp	r1, r0
 402 0016 F5D1     		bne	.L20
  87:digit_swapper.c ****             display[i]->blink_enabled = 0;
 403              		.loc 1 87 13 is_stmt 1 view .LVU106
 404              		.loc 1 87 39 is_stmt 0 view .LVU107
 405 0018 0021     		movs	r1, #0
 406 001a 9170     		strb	r1, [r2, #2]
  88:digit_swapper.c ****             display[i]->is_dimmed = 0;
 407              		.loc 1 88 13 is_stmt 1 view .LVU108
 408              		.loc 1 88 20 is_stmt 0 view .LVU109
 409 001c 024A     		ldr	r2, .L23
 410 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 411              		.loc 1 88 35 view .LVU110
 412 0022 D170     		strb	r1, [r2, #3]
 413 0024 EEE7     		b	.L20
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 36


 414              	.L22:
 415              	.LBE11:
  89:digit_swapper.c ****         }
  90:digit_swapper.c ****     }
  91:digit_swapper.c **** }
 416              		.loc 1 91 1 view .LVU111
 417 0026 7047     		bx	lr
 418              	.L24:
 419              		.align	2
 420              	.L23:
 421 0028 00000000 		.word	.LANCHOR0
 422              		.cfi_endproc
 423              	.LFE34:
 425              		.section	.text.next_digit,"ax",%progbits
 426              		.align	1
 427              		.global	next_digit
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	next_digit:
 433              	.LFB35:
  92:digit_swapper.c **** 
  93:digit_swapper.c **** uint8_t digit_idx = 0;
  94:digit_swapper.c **** uint8_t gap_flag =0;
  95:digit_swapper.c **** 
  96:digit_swapper.c **** void next_digit(void) {
 434              		.loc 1 96 23 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 08B5     		push	{r3, lr}
 439              	.LCFI2:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 3, -8
 442              		.cfi_offset 14, -4
  97:digit_swapper.c ****     // gap flag is needed due to weak dcdc booster
  98:digit_swapper.c ****     // half a time all tubes are off so the capacitor
  99:digit_swapper.c ****     // can charge enough but tubes are a bit dusker
 100:digit_swapper.c ****     if(gap_flag) {
 443              		.loc 1 100 5 view .LVU113
 444              		.loc 1 100 8 is_stmt 0 view .LVU114
 445 0002 2E4B     		ldr	r3, .L36
 446 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447              		.loc 1 100 7 view .LVU115
 448 0006 9BB1     		cbz	r3, .L26
 101:digit_swapper.c ****         // disable all tubes
 102:digit_swapper.c ****         GPIOA->BSRR = GPIO_BSRR_BR4;
 449              		.loc 1 102 9 is_stmt 1 view .LVU116
 450              		.loc 1 102 21 is_stmt 0 view .LVU117
 451 0008 2D4B     		ldr	r3, .L36+4
 452 000a 4FF48012 		mov	r2, #1048576
 453 000e 1A61     		str	r2, [r3, #16]
 103:digit_swapper.c ****         GPIOA->BSRR = GPIO_BSRR_BR5;
 454              		.loc 1 103 9 is_stmt 1 view .LVU118
 455              		.loc 1 103 21 is_stmt 0 view .LVU119
 456 0010 4FF40012 		mov	r2, #2097152
 457 0014 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 37


 104:digit_swapper.c ****         GPIOA->BSRR = GPIO_BSRR_BR6;
 458              		.loc 1 104 9 is_stmt 1 view .LVU120
 459              		.loc 1 104 21 is_stmt 0 view .LVU121
 460 0016 4FF48002 		mov	r2, #4194304
 461 001a 1A61     		str	r2, [r3, #16]
 105:digit_swapper.c ****         GPIOA->BSRR = GPIO_BSRR_BR7;
 462              		.loc 1 105 9 is_stmt 1 view .LVU122
 463              		.loc 1 105 21 is_stmt 0 view .LVU123
 464 001c 4FF40002 		mov	r2, #8388608
 465 0020 1A61     		str	r2, [r3, #16]
 466              	.L27:
 106:digit_swapper.c ****     } else {
 107:digit_swapper.c ****         switch (digit_idx)
 108:digit_swapper.c ****         {
 109:digit_swapper.c ****             // enable tube 0 if not dimmed 
 110:digit_swapper.c ****             case 0: {
 111:digit_swapper.c ****                 if(display[digit_idx]->is_dimmed == 0) {
 112:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 113:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS4;
 114:digit_swapper.c ****                 }
 115:digit_swapper.c ****             } break;
 116:digit_swapper.c ****             // enable tube 1 if not dimmed 
 117:digit_swapper.c ****             case 1: {
 118:digit_swapper.c ****                 if(display[digit_idx]->is_dimmed == 0) {
 119:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 120:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS5;
 121:digit_swapper.c ****                 }
 122:digit_swapper.c ****             } break;
 123:digit_swapper.c ****             // enable tube 2 if not dimmed 
 124:digit_swapper.c ****             case 2: {
 125:digit_swapper.c ****                 if(display[digit_idx]->is_dimmed == 0) {
 126:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 127:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS6;
 128:digit_swapper.c ****                 }
 129:digit_swapper.c ****             } break;
 130:digit_swapper.c ****             // enable tube 3 if not dimmed 
 131:digit_swapper.c ****             case 3: {
 132:digit_swapper.c ****                 if(display[digit_idx]->is_dimmed == 0) {
 133:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 134:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS7;
 135:digit_swapper.c ****                 }        
 136:digit_swapper.c ****             } break;
 137:digit_swapper.c ****             
 138:digit_swapper.c ****             default:
 139:digit_swapper.c ****                 break;
 140:digit_swapper.c ****         }
 141:digit_swapper.c ****         //vgo through tubes array
 142:digit_swapper.c ****         digit_idx++;
 143:digit_swapper.c ****         if(digit_idx > 3) digit_idx = 0;
 144:digit_swapper.c ****     }
 145:digit_swapper.c ****     gap_flag = !gap_flag;
 467              		.loc 1 145 5 is_stmt 1 view .LVU124
 468              		.loc 1 145 16 is_stmt 0 view .LVU125
 469 0022 264A     		ldr	r2, .L36
 470 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 471 0026 B3FA83F3 		clz	r3, r3
 472 002a 5B09     		lsrs	r3, r3, #5
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 38


 473              		.loc 1 145 14 view .LVU126
 474 002c 1370     		strb	r3, [r2]
 146:digit_swapper.c **** }
 475              		.loc 1 146 1 view .LVU127
 476 002e 08BD     		pop	{r3, pc}
 477              	.L26:
 107:digit_swapper.c ****         {
 478              		.loc 1 107 9 is_stmt 1 view .LVU128
 479 0030 244B     		ldr	r3, .L36+8
 480 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481 0034 032B     		cmp	r3, #3
 482 0036 08D8     		bhi	.L28
 483 0038 DFE803F0 		tbb	[pc, r3]
 484              	.L30:
 485 003c 02       		.byte	(.L33-.L30)/2
 486 003d 19       		.byte	(.L32-.L30)/2
 487 003e 26       		.byte	(.L31-.L30)/2
 488 003f 33       		.byte	(.L29-.L30)/2
 489              		.p2align 1
 490              	.L33:
 111:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 491              		.loc 1 111 17 view .LVU129
 111:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 492              		.loc 1 111 27 is_stmt 0 view .LVU130
 493 0040 214A     		ldr	r2, .L36+12
 494 0042 52F82330 		ldr	r3, [r2, r3, lsl #2]
 111:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 495              		.loc 1 111 38 view .LVU131
 496 0046 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 111:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 497              		.loc 1 111 19 view .LVU132
 498 0048 52B1     		cbz	r2, .L35
 499              	.L28:
 142:digit_swapper.c ****         if(digit_idx > 3) digit_idx = 0;
 500              		.loc 1 142 9 is_stmt 1 view .LVU133
 142:digit_swapper.c ****         if(digit_idx > 3) digit_idx = 0;
 501              		.loc 1 142 18 is_stmt 0 view .LVU134
 502 004a 1E4A     		ldr	r2, .L36+8
 503 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 504 004e 0133     		adds	r3, r3, #1
 505 0050 DBB2     		uxtb	r3, r3
 506 0052 1370     		strb	r3, [r2]
 143:digit_swapper.c ****     }
 507              		.loc 1 143 9 is_stmt 1 view .LVU135
 143:digit_swapper.c ****     }
 508              		.loc 1 143 11 is_stmt 0 view .LVU136
 509 0054 032B     		cmp	r3, #3
 510 0056 E4D9     		bls	.L27
 143:digit_swapper.c ****     }
 511              		.loc 1 143 27 is_stmt 1 discriminator 1 view .LVU137
 143:digit_swapper.c ****     }
 512              		.loc 1 143 37 is_stmt 0 discriminator 1 view .LVU138
 513 0058 1346     		mov	r3, r2
 514 005a 0022     		movs	r2, #0
 515 005c 1A70     		strb	r2, [r3]
 516 005e E0E7     		b	.L27
 517              	.L35:
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 39


 112:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS4;
 518              		.loc 1 112 21 is_stmt 1 view .LVU139
 519 0060 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 520 0062 FFF7FEFF 		bl	decoder_set_digit
 521              	.LVL15:
 113:digit_swapper.c ****                 }
 522              		.loc 1 113 21 view .LVU140
 113:digit_swapper.c ****                 }
 523              		.loc 1 113 33 is_stmt 0 view .LVU141
 524 0066 164B     		ldr	r3, .L36+4
 525 0068 1022     		movs	r2, #16
 526 006a 1A61     		str	r2, [r3, #16]
 527 006c EDE7     		b	.L28
 528              	.L32:
 118:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 529              		.loc 1 118 17 is_stmt 1 view .LVU142
 118:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 530              		.loc 1 118 27 is_stmt 0 view .LVU143
 531 006e 164A     		ldr	r2, .L36+12
 532 0070 52F82330 		ldr	r3, [r2, r3, lsl #2]
 118:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 533              		.loc 1 118 38 view .LVU144
 534 0074 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 118:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 535              		.loc 1 118 19 view .LVU145
 536 0076 002A     		cmp	r2, #0
 537 0078 E7D1     		bne	.L28
 119:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS5;
 538              		.loc 1 119 21 is_stmt 1 view .LVU146
 539 007a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 540 007c FFF7FEFF 		bl	decoder_set_digit
 541              	.LVL16:
 120:digit_swapper.c ****                 }
 542              		.loc 1 120 21 view .LVU147
 120:digit_swapper.c ****                 }
 543              		.loc 1 120 33 is_stmt 0 view .LVU148
 544 0080 0F4B     		ldr	r3, .L36+4
 545 0082 2022     		movs	r2, #32
 546 0084 1A61     		str	r2, [r3, #16]
 547 0086 E0E7     		b	.L28
 548              	.L31:
 125:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 549              		.loc 1 125 17 is_stmt 1 view .LVU149
 125:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 550              		.loc 1 125 27 is_stmt 0 view .LVU150
 551 0088 0F4A     		ldr	r2, .L36+12
 552 008a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 125:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 553              		.loc 1 125 38 view .LVU151
 554 008e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 125:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 555              		.loc 1 125 19 view .LVU152
 556 0090 002A     		cmp	r2, #0
 557 0092 DAD1     		bne	.L28
 126:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS6;
 558              		.loc 1 126 21 is_stmt 1 view .LVU153
 559 0094 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 40


 560 0096 FFF7FEFF 		bl	decoder_set_digit
 561              	.LVL17:
 127:digit_swapper.c ****                 }
 562              		.loc 1 127 21 view .LVU154
 127:digit_swapper.c ****                 }
 563              		.loc 1 127 33 is_stmt 0 view .LVU155
 564 009a 094B     		ldr	r3, .L36+4
 565 009c 4022     		movs	r2, #64
 566 009e 1A61     		str	r2, [r3, #16]
 567 00a0 D3E7     		b	.L28
 568              	.L29:
 132:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 569              		.loc 1 132 17 is_stmt 1 view .LVU156
 132:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 570              		.loc 1 132 27 is_stmt 0 view .LVU157
 571 00a2 094A     		ldr	r2, .L36+12
 572 00a4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 132:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 573              		.loc 1 132 38 view .LVU158
 574 00a8 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 132:digit_swapper.c ****                     decoder_set_digit(display[digit_idx]->value);
 575              		.loc 1 132 19 view .LVU159
 576 00aa 002A     		cmp	r2, #0
 577 00ac CDD1     		bne	.L28
 133:digit_swapper.c ****                     GPIOA->BSRR = GPIO_BSRR_BS7;
 578              		.loc 1 133 21 is_stmt 1 view .LVU160
 579 00ae 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 580 00b0 FFF7FEFF 		bl	decoder_set_digit
 581              	.LVL18:
 134:digit_swapper.c ****                 }        
 582              		.loc 1 134 21 view .LVU161
 134:digit_swapper.c ****                 }        
 583              		.loc 1 134 33 is_stmt 0 view .LVU162
 584 00b4 024B     		ldr	r3, .L36+4
 585 00b6 8022     		movs	r2, #128
 586 00b8 1A61     		str	r2, [r3, #16]
 587 00ba C6E7     		b	.L28
 588              	.L37:
 589              		.align	2
 590              	.L36:
 591 00bc 00000000 		.word	.LANCHOR1
 592 00c0 00080140 		.word	1073809408
 593 00c4 00000000 		.word	.LANCHOR2
 594 00c8 00000000 		.word	.LANCHOR0
 595              		.cfi_endproc
 596              	.LFE35:
 598              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 599              		.align	1
 600              		.global	TIM2_IRQHandler
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 605              	TIM2_IRQHandler:
 606              	.LFB36:
 147:digit_swapper.c **** 
 148:digit_swapper.c **** void TIM2_IRQHandler(void) {
 607              		.loc 1 148 28 is_stmt 1 view -0
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 41


 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI3:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 149:digit_swapper.c ****     // switch to next tube
 150:digit_swapper.c ****     if(TIM2->SR &TIM_SR_UIF) {
 616              		.loc 1 150 5 view .LVU164
 617              		.loc 1 150 12 is_stmt 0 view .LVU165
 618 0002 4FF08043 		mov	r3, #1073741824
 619 0006 1B8A     		ldrh	r3, [r3, #16]
 620              		.loc 1 150 7 view .LVU166
 621 0008 13F0010F 		tst	r3, #1
 622 000c 00D1     		bne	.L41
 623              	.L38:
 151:digit_swapper.c ****         TIM2->SR &= ~TIM_SR_UIF;
 152:digit_swapper.c ****         next_digit();
 153:digit_swapper.c ****     }
 154:digit_swapper.c **** }
 624              		.loc 1 154 1 view .LVU167
 625 000e 08BD     		pop	{r3, pc}
 626              	.L41:
 151:digit_swapper.c ****         TIM2->SR &= ~TIM_SR_UIF;
 627              		.loc 1 151 9 is_stmt 1 view .LVU168
 151:digit_swapper.c ****         TIM2->SR &= ~TIM_SR_UIF;
 628              		.loc 1 151 18 is_stmt 0 view .LVU169
 629 0010 4FF08042 		mov	r2, #1073741824
 630 0014 138A     		ldrh	r3, [r2, #16]
 631 0016 9BB2     		uxth	r3, r3
 632 0018 23F00103 		bic	r3, r3, #1
 633 001c 9BB2     		uxth	r3, r3
 634 001e 1382     		strh	r3, [r2, #16]	@ movhi
 152:digit_swapper.c ****     }
 635              		.loc 1 152 9 is_stmt 1 view .LVU170
 636 0020 FFF7FEFF 		bl	next_digit
 637              	.LVL19:
 638              		.loc 1 154 1 is_stmt 0 view .LVU171
 639 0024 F3E7     		b	.L38
 640              		.cfi_endproc
 641              	.LFE36:
 643              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 644              		.align	1
 645              		.global	TIM4_IRQHandler
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	TIM4_IRQHandler:
 651              	.LFB37:
 155:digit_swapper.c **** 
 156:digit_swapper.c **** void TIM4_IRQHandler(void) {
 652              		.loc 1 156 28 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 42


 656              		@ link register save eliminated.
 157:digit_swapper.c ****     // blink effect for time setting
 158:digit_swapper.c ****     if(TIM4->SR &TIM_SR_UIF) {
 657              		.loc 1 158 5 view .LVU173
 658              		.loc 1 158 12 is_stmt 0 view .LVU174
 659 0000 0F4B     		ldr	r3, .L47
 660 0002 1B8A     		ldrh	r3, [r3, #16]
 661              		.loc 1 158 7 view .LVU175
 662 0004 13F0010F 		tst	r3, #1
 663 0008 18D0     		beq	.L42
 159:digit_swapper.c ****         TIM4->SR &= ~TIM_SR_UIF;
 664              		.loc 1 159 9 is_stmt 1 view .LVU176
 665              		.loc 1 159 18 is_stmt 0 view .LVU177
 666 000a 0D4A     		ldr	r2, .L47
 667 000c 138A     		ldrh	r3, [r2, #16]
 668 000e 9BB2     		uxth	r3, r3
 669 0010 23F00103 		bic	r3, r3, #1
 670 0014 9BB2     		uxth	r3, r3
 671 0016 1382     		strh	r3, [r2, #16]	@ movhi
 160:digit_swapper.c ****         for(uint8_t i=0; i<4; i++) {
 672              		.loc 1 160 9 is_stmt 1 view .LVU178
 673              	.LBB12:
 674              		.loc 1 160 13 view .LVU179
 675              	.LVL20:
 676              		.loc 1 160 21 is_stmt 0 view .LVU180
 677 0018 0023     		movs	r3, #0
 678              		.loc 1 160 9 view .LVU181
 679 001a 01E0     		b	.L44
 680              	.LVL21:
 681              	.L45:
 682              		.loc 1 160 31 is_stmt 1 discriminator 2 view .LVU182
 683              		.loc 1 160 32 is_stmt 0 discriminator 2 view .LVU183
 684 001c 0133     		adds	r3, r3, #1
 685              	.LVL22:
 686              		.loc 1 160 32 discriminator 2 view .LVU184
 687 001e DBB2     		uxtb	r3, r3
 688              	.LVL23:
 689              	.L44:
 690              		.loc 1 160 26 is_stmt 1 discriminator 1 view .LVU185
 691              		.loc 1 160 9 is_stmt 0 discriminator 1 view .LVU186
 692 0020 032B     		cmp	r3, #3
 693 0022 0BD8     		bhi	.L42
 161:digit_swapper.c ****             if(display[i]->blink_enabled) display[i]->is_dimmed = !display[i]->is_dimmed;
 694              		.loc 1 161 13 is_stmt 1 view .LVU187
 695              		.loc 1 161 23 is_stmt 0 view .LVU188
 696 0024 074A     		ldr	r2, .L47+4
 697 0026 52F82320 		ldr	r2, [r2, r3, lsl #2]
 698              		.loc 1 161 26 view .LVU189
 699 002a 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 700              		.loc 1 161 15 view .LVU190
 701 002c 0029     		cmp	r1, #0
 702 002e F5D0     		beq	.L45
 703              		.loc 1 161 43 is_stmt 1 discriminator 1 view .LVU191
 704              		.loc 1 161 78 is_stmt 0 discriminator 1 view .LVU192
 705 0030 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 706              		.loc 1 161 67 discriminator 1 view .LVU193
 707 0032 B1FA81F1 		clz	r1, r1
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 43


 708 0036 4909     		lsrs	r1, r1, #5
 709              		.loc 1 161 65 discriminator 1 view .LVU194
 710 0038 D170     		strb	r1, [r2, #3]
 711 003a EFE7     		b	.L45
 712              	.LVL24:
 713              	.L42:
 714              		.loc 1 161 65 discriminator 1 view .LVU195
 715              	.LBE12:
 162:digit_swapper.c ****         }
 163:digit_swapper.c ****     }
 164:digit_swapper.c **** }...
 716              		.loc 1 164 1 view .LVU196
 717 003c 7047     		bx	lr
 718              	.L48:
 719 003e 00BF     		.align	2
 720              	.L47:
 721 0040 00080040 		.word	1073743872
 722 0044 00000000 		.word	.LANCHOR0
 723              		.cfi_endproc
 724              	.LFE37:
 726              		.global	gap_flag
 727              		.global	digit_idx
 728              		.global	display
 729              		.global	digit_3
 730              		.global	digit_2
 731              		.global	digit_1
 732              		.global	digit_0
 733              		.section	.bss.digit_0,"aw",%nobits
 734              		.align	2
 737              	digit_0:
 738 0000 00000000 		.space	4
 739              		.section	.bss.digit_idx,"aw",%nobits
 740              		.set	.LANCHOR2,. + 0
 743              	digit_idx:
 744 0000 00       		.space	1
 745              		.section	.bss.gap_flag,"aw",%nobits
 746              		.set	.LANCHOR1,. + 0
 749              	gap_flag:
 750 0000 00       		.space	1
 751              		.section	.data.digit_1,"aw"
 752              		.align	2
 755              	digit_1:
 756 0000 01       		.byte	1
 757 0001 00       		.byte	0
 758 0002 00       		.byte	0
 759 0003 00       		.byte	0
 760              		.section	.data.digit_2,"aw"
 761              		.align	2
 764              	digit_2:
 765 0000 02       		.byte	2
 766 0001 00       		.byte	0
 767 0002 00       		.byte	0
 768 0003 00       		.byte	0
 769              		.section	.data.digit_3,"aw"
 770              		.align	2
 773              	digit_3:
 774 0000 03       		.byte	3
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 44


 775 0001 00       		.byte	0
 776 0002 00       		.byte	0
 777 0003 00       		.byte	0
 778              		.section	.data.display,"aw"
 779              		.align	2
 780              		.set	.LANCHOR0,. + 0
 783              	display:
 784 0000 00000000 		.word	digit_0
 785 0004 00000000 		.word	digit_1
 786 0008 00000000 		.word	digit_2
 787 000c 00000000 		.word	digit_3
 788              		.text
 789              	.Letext0:
 790              		.file 3 "CMSIS/Inc/stm32f10x.h"
 791              		.file 4 "/usr/local/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_
 792              		.file 5 "/usr/local/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 793              		.file 6 "rtc.h"
 794              		.file 7 "digit_swapper.h"
 795              		.file 8 "decoder.h"
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 digit_swapper.c
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:18     .text.digit_swapper_init:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:24     .text.digit_swapper_init:0000000000000000 digit_swapper_init
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:158    .text.digit_swapper_init:00000000000000a0 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:166    .text.digit_swapper_start:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:172    .text.digit_swapper_start:0000000000000000 digit_swapper_start
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:200    .text.digit_swapper_stop:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:206    .text.digit_swapper_stop:0000000000000000 digit_swapper_stop
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:227    .text.digit_swapper_set_time:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:233    .text.digit_swapper_set_time:0000000000000000 digit_swapper_set_time
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:292    .text.digit_swapper_set_time:0000000000000058 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:298    .text.digit_swapper_enable_blink:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:304    .text.digit_swapper_enable_blink:0000000000000000 digit_swapper_enable_blink
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:354    .text.digit_swapper_enable_blink:0000000000000020 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:359    .text.digit_swapper_disable_blink:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:365    .text.digit_swapper_disable_blink:0000000000000000 digit_swapper_disable_blink
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:421    .text.digit_swapper_disable_blink:0000000000000028 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:426    .text.next_digit:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:432    .text.next_digit:0000000000000000 next_digit
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:485    .text.next_digit:000000000000003c $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:489    .text.next_digit:0000000000000040 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:591    .text.next_digit:00000000000000bc $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:599    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:605    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:644    .text.TIM4_IRQHandler:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:650    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:721    .text.TIM4_IRQHandler:0000000000000040 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:749    .bss.gap_flag:0000000000000000 gap_flag
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:743    .bss.digit_idx:0000000000000000 digit_idx
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:783    .data.display:0000000000000000 display
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:773    .data.digit_3:0000000000000000 digit_3
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:764    .data.digit_2:0000000000000000 digit_2
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:755    .data.digit_1:0000000000000000 digit_1
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:737    .bss.digit_0:0000000000000000 digit_0
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:734    .bss.digit_0:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:744    .bss.digit_idx:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:750    .bss.gap_flag:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:752    .data.digit_1:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:761    .data.digit_2:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:770    .data.digit_3:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccnn5Arc.s:779    .data.display:0000000000000000 $d

UNDEFINED SYMBOLS
decoder_init
decoder_set_digit
